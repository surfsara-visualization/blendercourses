{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"modules/basics/animation/everything/","text":"Animating everything \u00b6 Here, we'll show how generic and powerful the Blender animation system is.","title":"Animating everything"},{"location":"modules/basics/animation/everything/#animating-everything","text":"Here, we'll show how generic and powerful the Blender animation system is.","title":"Animating everything"},{"location":"modules/basics/animation/example_flipbook_animation/","text":"(EXAMPLE) Flipbook animation \u00b6 Here are the steps needed to import a set of animated meshes and make them play as an animation within Blender. The approach we use here is to have a single mesh object on which we change the associated mesh data each frame. So even though all timesteps are loaded only one of them is visible at a time. Here we take advantage of the Blender scene organization, where each object (a mesh object in this case) refers to object data (one of the meshes in the animation). We use a small Python script, called a frame handler , to respond to a change of the current frame time. Warning The method below will import all meshes in the animation into the current scene. This uses quite a bit of memory (around 1GB in our tests). Note The data for this example is part of our advanced course and you can find the data on https://edu.nl/hrvbe under data/animation . The animated_ply_imports.blend scene file contains two Python scripts, in the Text Editor called 1. import ply files and 2. register anim handler . The dambreak.tar.gz file contains a set of animated meshes in binary PLY format and so is quite large when extracted. Extract dambreak.tar.gz in the same directory as animated_ply_imports.blend . This will create a directory dambreak which contains the PLY files. Load animated_ply_imports.blend As noted above, this blend file not only contains a 3D scene, but also two Python scripts we use to set up the flipbook animation. The first step is to load all the timesteps in the dataset using one of the scripts. This might take a bit of time, depending on the speed of your system. By default, only the first 100 steps are loaded. You can increase the number of files to the full 300 if you like by updating the variable N in both the import script and the animation handler script. Execute the script that imports the time step meshes from the PLY files. To do this step make sure the script called 1. import ply files is selected in the text editor panel. Then press the play button to the right of it, which will execute the script (an alternative is press Alt-P in the editor). The cursor will change to an animated circle, indicating the import is running. In case you get the idea something is wrong check the console output in the terminal where you started Blender. After all PLY files are loaded execute the script that installs the frame change handler. This script is called 2. register anim handler . Make sure the text editor is switched to this script, then press the play button. Verify that the flipbook animation works with Space and/or moving the time slider in the Timeline with Shift-RMB . You should see the fluid simulation evolve with each frame. You can also check the object data associated with the Fluid sim object in the Outliner to see that it changes. The playback speed will depend on your system's performance, but also on the framerate setting chosen. Change the Frame Rate value (in the Output properties tab at the right side of the screen, icon ) to different values to see how your system handles it. Is 60 fps feasible? The Fluid sim object is still transformable as any normal object. Experiment with this, to see how it influences the flipbook animation. If you like, you can add a Camera to the scene and make it follow the wave of fluid in a nice way and then render this into animation.","title":"(EXAMPLE) Flipbook animation"},{"location":"modules/basics/animation/example_flipbook_animation/#example-flipbook-animation","text":"Here are the steps needed to import a set of animated meshes and make them play as an animation within Blender. The approach we use here is to have a single mesh object on which we change the associated mesh data each frame. So even though all timesteps are loaded only one of them is visible at a time. Here we take advantage of the Blender scene organization, where each object (a mesh object in this case) refers to object data (one of the meshes in the animation). We use a small Python script, called a frame handler , to respond to a change of the current frame time. Warning The method below will import all meshes in the animation into the current scene. This uses quite a bit of memory (around 1GB in our tests). Note The data for this example is part of our advanced course and you can find the data on https://edu.nl/hrvbe under data/animation . The animated_ply_imports.blend scene file contains two Python scripts, in the Text Editor called 1. import ply files and 2. register anim handler . The dambreak.tar.gz file contains a set of animated meshes in binary PLY format and so is quite large when extracted. Extract dambreak.tar.gz in the same directory as animated_ply_imports.blend . This will create a directory dambreak which contains the PLY files. Load animated_ply_imports.blend As noted above, this blend file not only contains a 3D scene, but also two Python scripts we use to set up the flipbook animation. The first step is to load all the timesteps in the dataset using one of the scripts. This might take a bit of time, depending on the speed of your system. By default, only the first 100 steps are loaded. You can increase the number of files to the full 300 if you like by updating the variable N in both the import script and the animation handler script. Execute the script that imports the time step meshes from the PLY files. To do this step make sure the script called 1. import ply files is selected in the text editor panel. Then press the play button to the right of it, which will execute the script (an alternative is press Alt-P in the editor). The cursor will change to an animated circle, indicating the import is running. In case you get the idea something is wrong check the console output in the terminal where you started Blender. After all PLY files are loaded execute the script that installs the frame change handler. This script is called 2. register anim handler . Make sure the text editor is switched to this script, then press the play button. Verify that the flipbook animation works with Space and/or moving the time slider in the Timeline with Shift-RMB . You should see the fluid simulation evolve with each frame. You can also check the object data associated with the Fluid sim object in the Outliner to see that it changes. The playback speed will depend on your system's performance, but also on the framerate setting chosen. Change the Frame Rate value (in the Output properties tab at the right side of the screen, icon ) to different values to see how your system handles it. Is 60 fps feasible? The Fluid sim object is still transformable as any normal object. Experiment with this, to see how it influences the flipbook animation. If you like, you can add a Camera to the scene and make it follow the wave of fluid in a nice way and then render this into animation.","title":"(EXAMPLE) Flipbook animation"},{"location":"modules/basics/animation/exercise_manual_camera_orbit/","text":"(EXERCISE) Orbiting an object manually \u00b6 Note The steps in this exercise were partly shown in the presentation as well, but that was mostly to illustrate keyframe animation. Here, you can redo those steps in detail and experiment with them. To orbit an object the camera needs a circular path around the object's location. Load orbit.blend The scene contains a single monkey (centered at the origin) and a camera. Note that the animation has a length of 100 frames, starting at frame 0. As a first way of doing an orbit we're going to add keyframes for the camera position, as it rotates around the monkey, using the 3D cursor pivot mode. Set the Pivot Point mode to 3D cursor (bring up the Pivot Point pie menu with period . , select 3D Cursor ). Make sure the 3D cursor is located in the origin by resetting its position with Shift-C . This will also change the view to fit the scene extents. In general, you can check the current position of the 3D cursor in the sidebar ( N to toggle) on the View tab under 3D Cursor Select the camera. Verify that as you rotate it around the Z axis the camera indeed orbits the 3D cursor, and therefore also orbits around the monkey head. Add 4 keyframes at intervals of 25 frames and 90 degrees rotation around Z to complete a 360 degree rotation of the camera around the object over the full animation of 100 frames Play the animation with Spacebar . Is the camera orbit usable? Why not? Also check the camera view during playback. Check the graphs in the Graph Editor. See if you can improve the camera orbit, either by changing the graphs, inserting more keyframes, or both. One way to influence the shape of the curves is to edit the handles attached to each control point, or to change the keyframe interpolation for a control point with T . Tip If you have only a single object in front of the camera around which you want to orbit, an alternative approach is to simply rotate the object itself while keeping the camera in a fixed position. However, this might not always be feasible or preferable.","title":"(EXERCISE) Orbiting an object manually"},{"location":"modules/basics/animation/exercise_manual_camera_orbit/#exercise-orbiting-an-object-manually","text":"Note The steps in this exercise were partly shown in the presentation as well, but that was mostly to illustrate keyframe animation. Here, you can redo those steps in detail and experiment with them. To orbit an object the camera needs a circular path around the object's location. Load orbit.blend The scene contains a single monkey (centered at the origin) and a camera. Note that the animation has a length of 100 frames, starting at frame 0. As a first way of doing an orbit we're going to add keyframes for the camera position, as it rotates around the monkey, using the 3D cursor pivot mode. Set the Pivot Point mode to 3D cursor (bring up the Pivot Point pie menu with period . , select 3D Cursor ). Make sure the 3D cursor is located in the origin by resetting its position with Shift-C . This will also change the view to fit the scene extents. In general, you can check the current position of the 3D cursor in the sidebar ( N to toggle) on the View tab under 3D Cursor Select the camera. Verify that as you rotate it around the Z axis the camera indeed orbits the 3D cursor, and therefore also orbits around the monkey head. Add 4 keyframes at intervals of 25 frames and 90 degrees rotation around Z to complete a 360 degree rotation of the camera around the object over the full animation of 100 frames Play the animation with Spacebar . Is the camera orbit usable? Why not? Also check the camera view during playback. Check the graphs in the Graph Editor. See if you can improve the camera orbit, either by changing the graphs, inserting more keyframes, or both. One way to influence the shape of the curves is to edit the handles attached to each control point, or to change the keyframe interpolation for a control point with T . Tip If you have only a single object in front of the camera around which you want to orbit, an alternative approach is to simply rotate the object itself while keeping the camera in a fixed position. However, this might not always be feasible or preferable.","title":"(EXERCISE) Orbiting an object manually"},{"location":"modules/basics/animation/exercise_parented_camera_orbit/","text":"(EXERCISE) Camera orbiting using parenting \u00b6 We will try another way of doing a camera orbit. This method involves parenting the camera to an empty . Parenting is creating a hierarchical relation between two objects. An empty is a special 3D object with no geometry, but which can be placed and oriented in the scene as usual. It is shown as a 3D cross-hairs in the 3D view. It is often used when doing parenting. Load orbit.blend . If you happened to have saved the file in the previous assignment with some keyframes set on the camera you can delete these by selecting the Camera. Then go into the Timeline editor at the bottom and select all keyframes (diamond markers) with A , press X , choose Delete Keyframes . Reset the 3D cursor to the origin with Shift-C Add an Empty to the scene: Shift-A > Empty > Arrows Select only the camera, then add the Empty to the selection by clicking Shift-LMB with the cursor over the empty (or using Ctrl-LMB in the outliner). The camera should now have a dark orange selection outline, while the empty should have a light orange outline, as the latter is the active object. Press Ctrl-P and pick Object to add a parent-child relationship A black dotted line from the camera to the empty should now be visible in the scene. This means the camera is now parented to the empty. Any transformation you apply to the empty will get applied to the camera as well. Note Bad Parenting : if you made a mistake in the parenting of step 6 then you can clear an object's parent by selecting that object, pressing Alt-P and picking Clear Parent . Verify in the outliner that the Camera object is now indeed a child of the Empty (you might have to use the little white triangles to open the necessary tree entries) Make the empty the single selected object. Enter Z rotation mode by pressing R followed by Z . Note that as you move the mouse both the empty and camera are transformed. Exit the rotation mode with Esc , leaving the Z rotation of the empty set to zero. Add key frames at the beginning and end of the animation to have the empty rotate 360 degrees around Z over the animation period Check the camera orbit, including how it looks in the camera view. Is this orbit better? You might have noticed that, even though we now have a nice circular rotation of the camera around the object, the rotation speed actually isn't constant. If you select the empty and look at the Graph Editor you can see that the graph line representing the Z rotation value isn't straight, but looks like an S. This is due to the default interpolation mode that is used between key frames. To make the rotation speed constant make sure the empty is selected. Then in the Graph Editor select all curve points with A and press V to set the handle type, pick Vector . The curves should now have become straight lines. Check the animation to see the rotation speed has become constant. Depending on how exactly you set up the animation you might notice a hickup at the moment that the animation wraps around from frame 99 to frame 0. This happens in case you set the same visible rotation of the empty for frame 0 and 99 (e.g. 0 degrees for frame 0 and 360 degrees for frame 99). You can fix this by changing the animation length to 99 frames by setting End to 98 in the Output properties panel (the value is directly below Frame Start ). Now, the animation should wrap around smoothly.","title":"(EXERCISE) Camera orbiting using parenting"},{"location":"modules/basics/animation/exercise_parented_camera_orbit/#exercise-camera-orbiting-using-parenting","text":"We will try another way of doing a camera orbit. This method involves parenting the camera to an empty . Parenting is creating a hierarchical relation between two objects. An empty is a special 3D object with no geometry, but which can be placed and oriented in the scene as usual. It is shown as a 3D cross-hairs in the 3D view. It is often used when doing parenting. Load orbit.blend . If you happened to have saved the file in the previous assignment with some keyframes set on the camera you can delete these by selecting the Camera. Then go into the Timeline editor at the bottom and select all keyframes (diamond markers) with A , press X , choose Delete Keyframes . Reset the 3D cursor to the origin with Shift-C Add an Empty to the scene: Shift-A > Empty > Arrows Select only the camera, then add the Empty to the selection by clicking Shift-LMB with the cursor over the empty (or using Ctrl-LMB in the outliner). The camera should now have a dark orange selection outline, while the empty should have a light orange outline, as the latter is the active object. Press Ctrl-P and pick Object to add a parent-child relationship A black dotted line from the camera to the empty should now be visible in the scene. This means the camera is now parented to the empty. Any transformation you apply to the empty will get applied to the camera as well. Note Bad Parenting : if you made a mistake in the parenting of step 6 then you can clear an object's parent by selecting that object, pressing Alt-P and picking Clear Parent . Verify in the outliner that the Camera object is now indeed a child of the Empty (you might have to use the little white triangles to open the necessary tree entries) Make the empty the single selected object. Enter Z rotation mode by pressing R followed by Z . Note that as you move the mouse both the empty and camera are transformed. Exit the rotation mode with Esc , leaving the Z rotation of the empty set to zero. Add key frames at the beginning and end of the animation to have the empty rotate 360 degrees around Z over the animation period Check the camera orbit, including how it looks in the camera view. Is this orbit better? You might have noticed that, even though we now have a nice circular rotation of the camera around the object, the rotation speed actually isn't constant. If you select the empty and look at the Graph Editor you can see that the graph line representing the Z rotation value isn't straight, but looks like an S. This is due to the default interpolation mode that is used between key frames. To make the rotation speed constant make sure the empty is selected. Then in the Graph Editor select all curve points with A and press V to set the handle type, pick Vector . The curves should now have become straight lines. Check the animation to see the rotation speed has become constant. Depending on how exactly you set up the animation you might notice a hickup at the moment that the animation wraps around from frame 99 to frame 0. This happens in case you set the same visible rotation of the empty for frame 0 and 99 (e.g. 0 degrees for frame 0 and 360 degrees for frame 99). You can fix this by changing the animation length to 99 frames by setting End to 98 in the Output properties panel (the value is directly below Frame Start ). Now, the animation should wrap around smoothly.","title":"(EXERCISE) Camera orbiting using parenting"},{"location":"modules/basics/animation/exercise_track_to/","text":"(EXERCISE) Track To constraint \u00b6 Load track_to.blend This scene contains two moving cubes and a single camera. We would like to keep the camera pointed at one of the cubes as it moves across the scene. We could animate the camera orientation ourselves, but there is an easier way using a constraint. A constraint operates on an object and can influence things like orientation or scale amount based on another object's properties. We will be using a Track To constraint here, which keeps one object pointing at another object. Select the camera Switch the Properties panel to the Object Constraints tab using the icon In the Add Object Constraint menu pick Track To under Tracking The Track To constraint will keep the object, in this case our camera, oriented at another object all the time. The other object is called the Target object (in this case one of the cubes). In the constraint settings under Target (the top one!) pick Cube If you had the 3D View set to view through the active camera (the view will be named Camera Perspective ) one of the cubes should now be nicely centered in the view. Check that when playing the animation the cube indeed stays centered in the camera view. Orient the 3D view so you can see the camera's orientation in relation to the scene, specifically the targeted cube. There is a blue dotted line indicating the constraint between the camera and the cube. To understand how the Track To constraint works in this case we need to understand the basic orientation of a Blender camera. Add a new Camera ( Shift-A > Camera ) Select it and clear its rotation with Alt-R . Zoom in on the new camera so you can see along which axis it is looking. Also note which axis is the Up direction of the camera (i.e. pointing towards the top of the view as seen by this camera). Select the original camera we wanted to animate and which has the Track To constraint. Change the 3D view so you can see the whole scene, including the selected camera. Change the Track Axis value of the Track To constraint to different values. Also experiment with different values for the Up setting. Compare these settings against what you concluded from step 10.","title":"(EXERCISE) Track To constraint"},{"location":"modules/basics/animation/exercise_track_to/#exercise-track-to-constraint","text":"Load track_to.blend This scene contains two moving cubes and a single camera. We would like to keep the camera pointed at one of the cubes as it moves across the scene. We could animate the camera orientation ourselves, but there is an easier way using a constraint. A constraint operates on an object and can influence things like orientation or scale amount based on another object's properties. We will be using a Track To constraint here, which keeps one object pointing at another object. Select the camera Switch the Properties panel to the Object Constraints tab using the icon In the Add Object Constraint menu pick Track To under Tracking The Track To constraint will keep the object, in this case our camera, oriented at another object all the time. The other object is called the Target object (in this case one of the cubes). In the constraint settings under Target (the top one!) pick Cube If you had the 3D View set to view through the active camera (the view will be named Camera Perspective ) one of the cubes should now be nicely centered in the view. Check that when playing the animation the cube indeed stays centered in the camera view. Orient the 3D view so you can see the camera's orientation in relation to the scene, specifically the targeted cube. There is a blue dotted line indicating the constraint between the camera and the cube. To understand how the Track To constraint works in this case we need to understand the basic orientation of a Blender camera. Add a new Camera ( Shift-A > Camera ) Select it and clear its rotation with Alt-R . Zoom in on the new camera so you can see along which axis it is looking. Also note which axis is the Up direction of the camera (i.e. pointing towards the top of the view as seen by this camera). Select the original camera we wanted to animate and which has the Track To constraint. Change the 3D view so you can see the whole scene, including the selected camera. Change the Track Axis value of the Track To constraint to different values. Also experiment with different values for the Up setting. Compare these settings against what you concluded from step 10.","title":"(EXERCISE) Track To constraint"},{"location":"modules/basics/animation/introduction/","text":"Introduction \u00b6 Animation is a very broad topic and we will only cover a very small part of what is possible in Blender. We'll begin with an introduction into animation and then focus on basic keyframe animation. Summary of basic UI interaction and shortcut keys \u00b6 All (3D View, Timeline, Graph Editor) \u00b6 Shift-Left for moving time to the first frame in the animation, Shift-Right for the last frame Left key for 1 frame back, Right for 1 forward Up key for 1 keyframe forward, Down for 1 back Spacebar for toggling animation playback 3D view \u00b6 I in the 3D view for inserting/updating a keyframe for the current frame (pick the type) Alt-I in the 3D view for deleting the keyframe data for the current frame Timeline \u00b6 Changing current frame (either click or drag): LMB on the row of frame numbers at the top OR Shift-RMB within the full area Change zoom with mouse Wheel , zoom extent with Home LMB click or LMB + drag for selecting keyframes (the yellow diamonds) The usual shortcuts for editing keyframes, e.g. A for selecting all keyframes, X for deleting all selected keyframes, G for grabbing and moving, etc Graph editor \u00b6 Change current frame with Shift-RMB Change zoom with Ctrl-MMB drag, or mouse Wheel Translate with Shift-MMB (same as in 3D view) Zoom graph extent with Home (same as in 3D view) The usual shortcuts for editing curve control points, e.g. A for selecting all, X for deleting all selected points, G for grabbing and moving, etc Tip If one or more curves in the graph editor don't seem to be editable (and they show as dotted lines) then you might have accidentally disabled editing. To fix: with the mouse over the graph editor select all curves with A and press TAB to toggle editability. Further reading \u00b6 This section in the Blender manual contains many more details on keyframing, particularly with respect to the curves in the Graph Editor. The proper definitions of the colors of keyframed values is described here","title":"Introduction"},{"location":"modules/basics/animation/introduction/#introduction","text":"Animation is a very broad topic and we will only cover a very small part of what is possible in Blender. We'll begin with an introduction into animation and then focus on basic keyframe animation.","title":"Introduction"},{"location":"modules/basics/animation/introduction/#summary-of-basic-ui-interaction-and-shortcut-keys","text":"","title":"Summary of basic UI interaction and shortcut keys"},{"location":"modules/basics/animation/introduction/#all-3d-view-timeline-graph-editor","text":"Shift-Left for moving time to the first frame in the animation, Shift-Right for the last frame Left key for 1 frame back, Right for 1 forward Up key for 1 keyframe forward, Down for 1 back Spacebar for toggling animation playback","title":"All (3D View, Timeline, Graph Editor)"},{"location":"modules/basics/animation/introduction/#3d-view","text":"I in the 3D view for inserting/updating a keyframe for the current frame (pick the type) Alt-I in the 3D view for deleting the keyframe data for the current frame","title":"3D view"},{"location":"modules/basics/animation/introduction/#timeline","text":"Changing current frame (either click or drag): LMB on the row of frame numbers at the top OR Shift-RMB within the full area Change zoom with mouse Wheel , zoom extent with Home LMB click or LMB + drag for selecting keyframes (the yellow diamonds) The usual shortcuts for editing keyframes, e.g. A for selecting all keyframes, X for deleting all selected keyframes, G for grabbing and moving, etc","title":"Timeline"},{"location":"modules/basics/animation/introduction/#graph-editor","text":"Change current frame with Shift-RMB Change zoom with Ctrl-MMB drag, or mouse Wheel Translate with Shift-MMB (same as in 3D view) Zoom graph extent with Home (same as in 3D view) The usual shortcuts for editing curve control points, e.g. A for selecting all, X for deleting all selected points, G for grabbing and moving, etc Tip If one or more curves in the graph editor don't seem to be editable (and they show as dotted lines) then you might have accidentally disabled editing. To fix: with the mouse over the graph editor select all curves with A and press TAB to toggle editability.","title":"Graph editor"},{"location":"modules/basics/animation/introduction/#further-reading","text":"This section in the Blender manual contains many more details on keyframing, particularly with respect to the curves in the Graph Editor. The proper definitions of the colors of keyframed values is described here","title":"Further reading"},{"location":"modules/basics/animation/tradeoffs_settings_output/","text":"Trade-offs, settings and output \u00b6 Here, we look into trade-offs that you can make in terms of chosen frame rate, animation length, quality, etc. Secondly, we will look in detail into the different settings available for an animation, including the type of output (images or video file) and strategies to handle long render times. We also describe how to do command-line rendering. Note on command-line rendering \u00b6 If you have set up the animation and its settings (e.g. frame rate, start/end frame, output name, etc) as you like in the Blender file then rendering from the command-line usually doesn't involve anything more than running blender -b file.blend -a You only need to add extra options if you want to override values set in the Blender file.","title":"Trade-offs, settings and output"},{"location":"modules/basics/animation/tradeoffs_settings_output/#trade-offs-settings-and-output","text":"Here, we look into trade-offs that you can make in terms of chosen frame rate, animation length, quality, etc. Secondly, we will look in detail into the different settings available for an animation, including the type of output (images or video file) and strategies to handle long render times. We also describe how to do command-line rendering.","title":"Trade-offs, settings and output"},{"location":"modules/basics/animation/tradeoffs_settings_output/#note-on-command-line-rendering","text":"If you have set up the animation and its settings (e.g. frame rate, start/end frame, output name, etc) as you like in the Blender file then rendering from the command-line usually doesn't involve anything more than running blender -b file.blend -a You only need to add extra options if you want to override values set in the Blender file.","title":"Note on command-line rendering"},{"location":"modules/basics/blender_basics/1_assignment_interaction_selections/","text":"(EXERCISE) Interaction, selections, outliner \u00b6 Tip See the cheat sheet under Navigation to refresh your memory w.r.t. view interaction and shortcuts. Another useful shortcut is Ctrl-Space to toggle maximization of a 3D view or other type of area. Viewpoints \u00b6 Load motorbike.blend In one of the two 3D views (your choice) manipulate the view to the following viewpoints: Alongside the motorbike, amongst the streamlines, looking in the direction of travel. From the rider's point of view, just in front of the helmet, looking ahead. An up-close point of view clearly showing the two streamlines that cross near the rider's helmet on his/her right side, one going under the arm, the other going over it. There is a single streamline that goes between the two rods of the steering column. Does that streamline terminate on the bike or does it continue past the bike? Try to get really close with the view so you can see where the streamline goes. Individual selection \u00b6 Select all objects using the A key. As you've seen earlier this will introduce orange outlines surrounding selected objects. Check the outliner, specifically the color of the object names, to see how the current selection is represented. In the 3D view deselect only the motorbike using Shift-LMB with the mouse cursor at the appropriate position Again check the outliner status, do you notice a difference in the name for the motorbike object? Add the motorbike back to the selection by using Shift-LMB over the bike in the 3D view. Check the orange outline color of the motorbike (or the corresponding entry in the outliner) to verify that it is now the active object. It should be the only object with a light orange color. Use Shift-LMB with the mouse over the \"floor and walls\" object. What changed in the selection? Specifically, what is now the active object? Once more use Shift-LMB on the \"floor ans walls\" object. What changed this time in the selection status of the object? Box selection \u00b6 Clear the selection with Alt-A (or double click the A key). Use box select ( LMB drag) to select all objects in the scene. Clear the selection with the Alt-A key. Now try to select ONLY the motorbike using box select. Check the outliner to make sure you're selecting just one object. You can also check the status line at the bottom of the Blender window, specifically the part that reads Objects: #/# , meaning selected / total. Outliner selection \u00b6 Make sure no objects are currently selected. Test with following actions in the outliner to get a good idea of what actions it supports and how this influences the visual state of the items in the outliner tree: Left-clicking on an item (possibly holding the Shift or Ctrl key) Using the keys A and Alt-A (note how these are similar in functionality to what they do in the 3D view, but in the context of the outliner items) Right-clicking on an item and choosing Select or Deselect How does the blue highlight of a line in the outliner relate to the selection status of an object in the 3D view?","title":"(EXERCISE) Interaction, selections, outliner"},{"location":"modules/basics/blender_basics/1_assignment_interaction_selections/#exercise-interaction-selections-outliner","text":"Tip See the cheat sheet under Navigation to refresh your memory w.r.t. view interaction and shortcuts. Another useful shortcut is Ctrl-Space to toggle maximization of a 3D view or other type of area.","title":"(EXERCISE) Interaction, selections, outliner"},{"location":"modules/basics/blender_basics/1_assignment_interaction_selections/#viewpoints","text":"Load motorbike.blend In one of the two 3D views (your choice) manipulate the view to the following viewpoints: Alongside the motorbike, amongst the streamlines, looking in the direction of travel. From the rider's point of view, just in front of the helmet, looking ahead. An up-close point of view clearly showing the two streamlines that cross near the rider's helmet on his/her right side, one going under the arm, the other going over it. There is a single streamline that goes between the two rods of the steering column. Does that streamline terminate on the bike or does it continue past the bike? Try to get really close with the view so you can see where the streamline goes.","title":"Viewpoints"},{"location":"modules/basics/blender_basics/1_assignment_interaction_selections/#individual-selection","text":"Select all objects using the A key. As you've seen earlier this will introduce orange outlines surrounding selected objects. Check the outliner, specifically the color of the object names, to see how the current selection is represented. In the 3D view deselect only the motorbike using Shift-LMB with the mouse cursor at the appropriate position Again check the outliner status, do you notice a difference in the name for the motorbike object? Add the motorbike back to the selection by using Shift-LMB over the bike in the 3D view. Check the orange outline color of the motorbike (or the corresponding entry in the outliner) to verify that it is now the active object. It should be the only object with a light orange color. Use Shift-LMB with the mouse over the \"floor and walls\" object. What changed in the selection? Specifically, what is now the active object? Once more use Shift-LMB on the \"floor ans walls\" object. What changed this time in the selection status of the object?","title":"Individual selection"},{"location":"modules/basics/blender_basics/1_assignment_interaction_selections/#box-selection","text":"Clear the selection with Alt-A (or double click the A key). Use box select ( LMB drag) to select all objects in the scene. Clear the selection with the Alt-A key. Now try to select ONLY the motorbike using box select. Check the outliner to make sure you're selecting just one object. You can also check the status line at the bottom of the Blender window, specifically the part that reads Objects: #/# , meaning selected / total.","title":"Box selection"},{"location":"modules/basics/blender_basics/1_assignment_interaction_selections/#outliner-selection","text":"Make sure no objects are currently selected. Test with following actions in the outliner to get a good idea of what actions it supports and how this influences the visual state of the items in the outliner tree: Left-clicking on an item (possibly holding the Shift or Ctrl key) Using the keys A and Alt-A (note how these are similar in functionality to what they do in the 3D view, but in the context of the outliner items) Right-clicking on an item and choosing Select or Deselect How does the blue highlight of a line in the outliner relate to the selection status of an object in the 3D view?","title":"Outliner selection"},{"location":"modules/basics/blender_basics/2_assignment_transformations/","text":"(EXERCISE) Transformations \u00b6 Hint You can clear an object's translation to all zero with Alt-G You can clear an object's rotation to all zero with Alt-R You can clear an object's scale to all zero with Alt-S You can undo a transformation with Ctrl-Z (or reload the file to reset completely) See section Object Actions of the cheat sheet for more shortcut keys Basic transformations \u00b6 Load axes.blend The Axes object in the scene is a 3D object just like any other. Note that the axes object shows the local axes of the object. Try translating, rotating and scaling the axes object with the different methods shown: The transform widgets (accessible from the toolbox on the upper-left) Using the G , R or S keys Entering values in the properties region in the upper-right of the view, under Transform Activate one of the transform modes (e.g. G for translation) and experiment with limiting a transformation to an axis with X , Y or Z keys, Activate one of the transform modes (e.g. G for translation) and experiment with limiting a transformation to a plane with Shift-X , Shift-Y or Shift-Z . Reload the axes.blend file to get back the original scene. Rotate the axes 30 degrees around (global) X. Now rotate the axes 45 degrees around the local Z axis. Pivot point modes \u00b6 Load transformations.blend Select the cone, monkey, torus and sphere Set pivot mode to Median Point (using the Pivot Point pie menu, which opens with the . key, i.e. period), if it isn't already. Press S to start scaling, then move the mouse to scale the objects apart Notice that as you scale up the objects increase in size and move apart, but only the torus' center point (the orange dot) moves below the plane. Why? Cancel the scale operation with Esc or a RMB click Enable the Only Locations option in the Pivot Point pie menu. When this is enabled it will cause any transformation to be applied to the locations of the objects (shown as orange circles), instead of to the objects themselves. Repeat the scaling of the four objects. Do you notice how the objects now transform differently? Change the pivot mode to Individual Origins and disable the Only Locations option. Do the scaling again, notice the difference. Enable the Only Locations setting. When you try to rotate the objects around Z nothing happens. Why not? Change the pivot mode to Median Point , leave Only Locations enabled. Rotate the objects around the Z axis. Now disable the Only Locations option and rotate the objects once again around the Z axis. Do you notice the subtle difference in transformation? Experiment some more with different selections of objects and the different Pivot Point modes, until you feel you get the hang of it. Rubik's cube \u00b6 Hint You can add a cube object with Shift-A > Mesh > Cube You can duplicate selected objects with Shift-D . This will also activate grab mode after the duplication. Start with an empty scene ( File > New > General ) Model a Rubik's cube: 3x3x3 Cube objects (minus the center cube) on a rectangular grid. Try to get the spacing between the Cube objects the same in all directions. Now select one face of the Rubik's cube (i.e. 3x3 cubes) and rotate it 30 degrees just like the real thing. Bonus: 2001 - A Space Odyssey \u00b6 Start with an empty scene ( File > New > General ) Remember the scene from Space Odyssey 2001, with our primate ancestors looking up at the monolith? Recreate that scene :) Add 4 or more monkey heads, surrounding a thin narrow box for the monolith Make the monkeys look up at the monolith If you want to go crazy add bodies to the monkeys using some scaled spheres Add a sun object + corresponding light somewhere in the sky.","title":"(EXERCISE) Transformations"},{"location":"modules/basics/blender_basics/2_assignment_transformations/#exercise-transformations","text":"Hint You can clear an object's translation to all zero with Alt-G You can clear an object's rotation to all zero with Alt-R You can clear an object's scale to all zero with Alt-S You can undo a transformation with Ctrl-Z (or reload the file to reset completely) See section Object Actions of the cheat sheet for more shortcut keys","title":"(EXERCISE) Transformations"},{"location":"modules/basics/blender_basics/2_assignment_transformations/#basic-transformations","text":"Load axes.blend The Axes object in the scene is a 3D object just like any other. Note that the axes object shows the local axes of the object. Try translating, rotating and scaling the axes object with the different methods shown: The transform widgets (accessible from the toolbox on the upper-left) Using the G , R or S keys Entering values in the properties region in the upper-right of the view, under Transform Activate one of the transform modes (e.g. G for translation) and experiment with limiting a transformation to an axis with X , Y or Z keys, Activate one of the transform modes (e.g. G for translation) and experiment with limiting a transformation to a plane with Shift-X , Shift-Y or Shift-Z . Reload the axes.blend file to get back the original scene. Rotate the axes 30 degrees around (global) X. Now rotate the axes 45 degrees around the local Z axis.","title":"Basic transformations"},{"location":"modules/basics/blender_basics/2_assignment_transformations/#pivot-point-modes","text":"Load transformations.blend Select the cone, monkey, torus and sphere Set pivot mode to Median Point (using the Pivot Point pie menu, which opens with the . key, i.e. period), if it isn't already. Press S to start scaling, then move the mouse to scale the objects apart Notice that as you scale up the objects increase in size and move apart, but only the torus' center point (the orange dot) moves below the plane. Why? Cancel the scale operation with Esc or a RMB click Enable the Only Locations option in the Pivot Point pie menu. When this is enabled it will cause any transformation to be applied to the locations of the objects (shown as orange circles), instead of to the objects themselves. Repeat the scaling of the four objects. Do you notice how the objects now transform differently? Change the pivot mode to Individual Origins and disable the Only Locations option. Do the scaling again, notice the difference. Enable the Only Locations setting. When you try to rotate the objects around Z nothing happens. Why not? Change the pivot mode to Median Point , leave Only Locations enabled. Rotate the objects around the Z axis. Now disable the Only Locations option and rotate the objects once again around the Z axis. Do you notice the subtle difference in transformation? Experiment some more with different selections of objects and the different Pivot Point modes, until you feel you get the hang of it.","title":"Pivot point modes"},{"location":"modules/basics/blender_basics/2_assignment_transformations/#rubiks-cube","text":"Hint You can add a cube object with Shift-A > Mesh > Cube You can duplicate selected objects with Shift-D . This will also activate grab mode after the duplication. Start with an empty scene ( File > New > General ) Model a Rubik's cube: 3x3x3 Cube objects (minus the center cube) on a rectangular grid. Try to get the spacing between the Cube objects the same in all directions. Now select one face of the Rubik's cube (i.e. 3x3 cubes) and rotate it 30 degrees just like the real thing.","title":"Rubik's cube"},{"location":"modules/basics/blender_basics/2_assignment_transformations/#bonus-2001-a-space-odyssey","text":"Start with an empty scene ( File > New > General ) Remember the scene from Space Odyssey 2001, with our primate ancestors looking up at the monolith? Recreate that scene :) Add 4 or more monkey heads, surrounding a thin narrow box for the monolith Make the monkeys look up at the monolith If you want to go crazy add bodies to the monkeys using some scaled spheres Add a sun object + corresponding light somewhere in the sky.","title":"Bonus: 2001 - A Space Odyssey"},{"location":"modules/basics/blender_basics/3_assignment_camera_and_views/","text":"(EXERCISE) Cameras and views \u00b6 Open cameras.blend This scene contains a bunny object, a sun light and two cameras: \"Close-up\" near the bunny's head and \"Overview\" further away. Select the Overview camera object, by either left-clicking on it in the 3D view or in the Outliner. Make this camera the active camera with either the outliner (click on the green camera icon right of the name), View > Cameras > Set Active Object as Camera or use Ctrl-Numpad0 . Notice that the 3D view changes to the camera's viewpoint. Rotate the 3D view with MMB to exit the camera view. You are now back in the normal 3D view interaction. Select the Close-up camera Switch to camera view by bringing up the View pie menu with ` (backtick, usually below the ~ ), then pick View Camera . What camera view are you now seeing, Close-up or Overview? So one thing to remember is that selecting a camera does not make it the \"active camera\" (even though it can be the active object , confusingly). Change the active camera to Close-up Rotate away from the camera view to the normal 3D view For switching back to the active camera view there's two more methods apart from the pie menu, try them: Using the View menu at the top of the 3D view area: View > Cameras > Active Camera Press Numpad0 Experiment with the different camera controls until you find the ones you're comfortable with Rotate away from the camera view to a 3D view that shows both cameras. In the Scene properties tab on the right-hand side of the window (and not the similar icon in the top bar left of Scene ) there's a drop-down menu Camera which lists the active camera. Change the active camera using that selection box. Apart from the name listed under the Scene properties do you notice how you can identify the active camera in the 3D view? Hint: it's subtle and unrelated to the yellow/orange color used for highlighting selected objects. Camera transformation \u00b6 Make sure the Overview camera object is the only selected object Make the Overview camera the active camera and then switch to its view In the camera view use regular object transformations to point the camera at the rabbit's tail. To refresh, in camera view with only the camera selected : Press G to translate, then move the mouse to change the view While still in move mode press MMB (or Z twice) to enter \"truck\" mode: this moves the camera forward/backward along the view axis. Pressing X twice will allow moving the camera sideways. Press R to rotate around the view axis In rotate mode press MMB to \"look around\" LMB to confirm, Esc to cancel Another useful feature is when you like the current viewpoint in the 3D view and want to match the active camera to this viewpoint. For this you can use Ctrl-Alt-Numpad0 (or with View > Align View > Align Active Camera To View in the header of the 3D view) Quad view \u00b6 Switch the 3D View to the so-called Quad View with Ctrl-Alt-Q . You now have orthogonal 2D views along the three axes (Top, Front and Right Orthographic), plus a 3D view (Camera Perspective). Note: the three axis views can only be translated and zoomed, not rotated Change the upper-right quad to a camera view, if it isn't already Press N to show the sidebar on the right On the View tab, under View Lock there's a Lock option called Camera to View . Enable that option. You should now see a dotted red outline around the orange camera rectangle in the Camera Perspective view. Hide the sidebar again ( N ), leaving the Lock option enabled Change the view in the Camera Perspective view using the regular 3D view mouse interaction ( MMB to rotate, Shift-MMB to translate, Ctrl-MMB to move forward/backward). Observe what happens to the active camera in the other quadrants when you alter the view. Use the sidebar again to disable the Lock Camera to View option Fly mode \u00b6 Add a camera to the scene ( Shift-A > Camera ). It will be placed at the position of the 3D cursor (the small red-white striped circle and axes). Change the upper-right view to this camera Activate fly mode with Shift-` (backtick). Use the ASDWXQE keys to move this camera close to the two bunny ears and look between them. You can change the fly speed with the mouse Wheel . In fly mode you can confirm the current view with LMB or press Enter . Press Esc to cancel and go back to the original view.","title":"(EXERCISE) Cameras and views"},{"location":"modules/basics/blender_basics/3_assignment_camera_and_views/#exercise-cameras-and-views","text":"Open cameras.blend This scene contains a bunny object, a sun light and two cameras: \"Close-up\" near the bunny's head and \"Overview\" further away. Select the Overview camera object, by either left-clicking on it in the 3D view or in the Outliner. Make this camera the active camera with either the outliner (click on the green camera icon right of the name), View > Cameras > Set Active Object as Camera or use Ctrl-Numpad0 . Notice that the 3D view changes to the camera's viewpoint. Rotate the 3D view with MMB to exit the camera view. You are now back in the normal 3D view interaction. Select the Close-up camera Switch to camera view by bringing up the View pie menu with ` (backtick, usually below the ~ ), then pick View Camera . What camera view are you now seeing, Close-up or Overview? So one thing to remember is that selecting a camera does not make it the \"active camera\" (even though it can be the active object , confusingly). Change the active camera to Close-up Rotate away from the camera view to the normal 3D view For switching back to the active camera view there's two more methods apart from the pie menu, try them: Using the View menu at the top of the 3D view area: View > Cameras > Active Camera Press Numpad0 Experiment with the different camera controls until you find the ones you're comfortable with Rotate away from the camera view to a 3D view that shows both cameras. In the Scene properties tab on the right-hand side of the window (and not the similar icon in the top bar left of Scene ) there's a drop-down menu Camera which lists the active camera. Change the active camera using that selection box. Apart from the name listed under the Scene properties do you notice how you can identify the active camera in the 3D view? Hint: it's subtle and unrelated to the yellow/orange color used for highlighting selected objects.","title":"(EXERCISE) Cameras and views"},{"location":"modules/basics/blender_basics/3_assignment_camera_and_views/#camera-transformation","text":"Make sure the Overview camera object is the only selected object Make the Overview camera the active camera and then switch to its view In the camera view use regular object transformations to point the camera at the rabbit's tail. To refresh, in camera view with only the camera selected : Press G to translate, then move the mouse to change the view While still in move mode press MMB (or Z twice) to enter \"truck\" mode: this moves the camera forward/backward along the view axis. Pressing X twice will allow moving the camera sideways. Press R to rotate around the view axis In rotate mode press MMB to \"look around\" LMB to confirm, Esc to cancel Another useful feature is when you like the current viewpoint in the 3D view and want to match the active camera to this viewpoint. For this you can use Ctrl-Alt-Numpad0 (or with View > Align View > Align Active Camera To View in the header of the 3D view)","title":"Camera transformation"},{"location":"modules/basics/blender_basics/3_assignment_camera_and_views/#quad-view","text":"Switch the 3D View to the so-called Quad View with Ctrl-Alt-Q . You now have orthogonal 2D views along the three axes (Top, Front and Right Orthographic), plus a 3D view (Camera Perspective). Note: the three axis views can only be translated and zoomed, not rotated Change the upper-right quad to a camera view, if it isn't already Press N to show the sidebar on the right On the View tab, under View Lock there's a Lock option called Camera to View . Enable that option. You should now see a dotted red outline around the orange camera rectangle in the Camera Perspective view. Hide the sidebar again ( N ), leaving the Lock option enabled Change the view in the Camera Perspective view using the regular 3D view mouse interaction ( MMB to rotate, Shift-MMB to translate, Ctrl-MMB to move forward/backward). Observe what happens to the active camera in the other quadrants when you alter the view. Use the sidebar again to disable the Lock Camera to View option","title":"Quad view"},{"location":"modules/basics/blender_basics/3_assignment_camera_and_views/#fly-mode","text":"Add a camera to the scene ( Shift-A > Camera ). It will be placed at the position of the 3D cursor (the small red-white striped circle and axes). Change the upper-right view to this camera Activate fly mode with Shift-` (backtick). Use the ASDWXQE keys to move this camera close to the two bunny ears and look between them. You can change the fly speed with the mouse Wheel . In fly mode you can confirm the current view with LMB or press Enter . Press Esc to cancel and go back to the original view.","title":"Fly mode"},{"location":"modules/basics/blender_basics/4_assignment_collections/","text":"(EXERCISE) Collections \u00b6 Open collections.blend This file contains four objects in three collections. Check the outliner: the plane is in all collections, the other three objects area each in only one collection. You can change which collections are visible using the 1 , 2 , ... keys. Switch among the three collections using the numeric keys, showing only the objects in one specific collection. Check the outliner, specifically the eye icons next to each collection and object, for how it updates when switching collections. Try toggling visibility of individual collections use Shift-1 , etc. Show all collections using the numeric keys Visibility control can also be done in the outliner by clicking on the eye icons right of the collection and object entries. Toggle the eye icon of Collection 1 by left-clicking on it. Verify that this does the same as Shift-1 in the 3D view. Make all collections visible again Moving objects between collections can be done in two ways: Select the cube object, move it to collection 3 using M and picking Collection 3 . Another way is drag the object in the outliner. Drag the Cube object back to Collection 2 . Adding a collection can also be useful: Create a new collection using RMB on the Scene Collection in the outliner, pick New Collection . Another method is to select the object to place in the new collection and use the M key in the 3D view and pick + New Collection . As we noted initially the plane object is present in multiple collections. You can place an object to multiple collection using the outliner by linking the object to the collection: Link the Suzanne object (the monkey head) to the newly created Collection 4 in the outliner by clicking with LMB on the Suzanne entry and holding the mouse , then drag the entry over to Collection 4 , press Ctrl and finally release the mouse and Ctrl key. Add an object to the scene, say a torus mesh. In which collection is it placed? Can you figure how to see to which collection new objects are added? To try figure out how to change this active collection. Hint: use a specific action in the outliner. Also check how the numeric keys 1 , 2 , ... in the 3D view affect the active collection (and what the difference is with using the outliner). Bonus: 14: Can you explain what a Shift-LMB click on the eye icon next to a collection does?","title":"(EXERCISE) Collections"},{"location":"modules/basics/blender_basics/4_assignment_collections/#exercise-collections","text":"Open collections.blend This file contains four objects in three collections. Check the outliner: the plane is in all collections, the other three objects area each in only one collection. You can change which collections are visible using the 1 , 2 , ... keys. Switch among the three collections using the numeric keys, showing only the objects in one specific collection. Check the outliner, specifically the eye icons next to each collection and object, for how it updates when switching collections. Try toggling visibility of individual collections use Shift-1 , etc. Show all collections using the numeric keys Visibility control can also be done in the outliner by clicking on the eye icons right of the collection and object entries. Toggle the eye icon of Collection 1 by left-clicking on it. Verify that this does the same as Shift-1 in the 3D view. Make all collections visible again Moving objects between collections can be done in two ways: Select the cube object, move it to collection 3 using M and picking Collection 3 . Another way is drag the object in the outliner. Drag the Cube object back to Collection 2 . Adding a collection can also be useful: Create a new collection using RMB on the Scene Collection in the outliner, pick New Collection . Another method is to select the object to place in the new collection and use the M key in the 3D view and pick + New Collection . As we noted initially the plane object is present in multiple collections. You can place an object to multiple collection using the outliner by linking the object to the collection: Link the Suzanne object (the monkey head) to the newly created Collection 4 in the outliner by clicking with LMB on the Suzanne entry and holding the mouse , then drag the entry over to Collection 4 , press Ctrl and finally release the mouse and Ctrl key. Add an object to the scene, say a torus mesh. In which collection is it placed? Can you figure how to see to which collection new objects are added? To try figure out how to change this active collection. Hint: use a specific action in the outliner. Also check how the numeric keys 1 , 2 , ... in the 3D view affect the active collection (and what the difference is with using the outliner). Bonus: 14: Can you explain what a Shift-LMB click on the eye icon next to a collection does?","title":"(EXERCISE) Collections"},{"location":"modules/basics/blender_basics/cameras_and_views/","text":"Cameras and views \u00b6 This section shows cameras and how to work with them. In the exercise after this section you get to try a lot of the operations shown, so following the video along isn't strictly needed. But if you do want to then the file used is data/blender_basics/cameras.blend .","title":"Cameras and views"},{"location":"modules/basics/blender_basics/cameras_and_views/#cameras-and-views","text":"This section shows cameras and how to work with them. In the exercise after this section you get to try a lot of the operations shown, so following the video along isn't strictly needed. But if you do want to then the file used is data/blender_basics/cameras.blend .","title":"Cameras and views"},{"location":"modules/basics/blender_basics/first_steps/","text":"First steps in the user interface \u00b6 Starting Blender \u00b6 In general Blender isn't different to start than any other GUI application. However, warning and error messages will be printed to the console window. It depends on the operating system you're working on how the console window is available: (All operating systems) If you start Blender from a terminal window, e.g. xterm or Windows Command window, then Blender output will be printed in that window (Windows only) If Blender was started from the Start menu then you can toggle the associated console window using the Window > Toggle System Console option See this section in the Blender manual for more details on starting Blender from the command line and details specific for each operating system. Fundamentals \u00b6 We will go over fundamentals of the user interface in terms of interaction and areas, specifically the 3D view and Outliner. We also touch on a number of often-performed operations, such as rendering an image and changing the set of selected objects. We also look a bit closer into keyboard shortcuts and menus. It's probably best to follow along in Blender on your own system while viewing the video. The files used in the video can be found under data/blender_basics . Hint If the interaction in the 3D view isn't smooth on your PC/laptop something might be wrong in the setup of your system. Please contact us if this appears to be the case. Hint If the 3D view (or some of the other areas) suddenly appear to behave strangely, or you now see your mesh with all kinds of dots or lines then you might have accidentally entered the so-called \"Edit Mode\" or any of the other modes available. Check the menu in the upper left of the 3D view, which should read Object Mode : In this course we will only Object Mode (and briefly use Vertex Paint mode in one of the exercises). You can use the drop-down menu shown above (or the Ctrl-Tab menu in the 3D view) and pick Object Mode to get back to the correct mode. Summary of 3D view navigation (see also the cheat sheet under Navigation): MMB = rotate view Scrollwheel or Ctrl+MMB = zoom view Shift+MMB = translate view Home = zoom out to show all objects Changes to default settings \u00b6 Note It's not required to change these defaults, but we find they help in working with Blender Under Edit > Preferences , then in Interface tab: Under Display disable Splash Screen Under Editors > Temporary Editors set Render In to Image Editor . This will cause the rendered image to be displayed as a replacement of the 3D view, instead of in a separate window. After rendering press Escape to get back the 3D view. Under Editors > Status Bar enable Scene Statistics , System Memory and Video Memory . This will show extra scene statistics in the status bar. Hint Another option which you might consider enabling is Orbit Around Selection . By default this is turned off and in that mode any rotation of the 3D viewport will be around the center of the view, which might cause selected objects to go out of view. When the option is turned on viewport rotation will be around the selected object(s), always keeping them in view. You can find this option on the Navigation tab under Orbit & Pan . Enabling GPU-based rendering in Cycles \u00b6 Note GPU rendering in Blender is only supported on Windows and Linux; macOS is currently not supported. In general GPU-based rendering is a lot faster than rendering on a multi-core CPU. However, only by making a comparison on your particular system can really find out if GPU rendering is a good option for you. Apart from performance there are some other aspects to consider with GPU rendering: When doing a GPU render your desktop environment might become less responsive A GPU usually has less memory available, which might cause problems with really large scenes In case you want to try enabling GPU rendering go to the Preferences window ( Edit > Preferences ) and then the System tab. The settings available under Cycles Render Device are somewhat dependent on the hardware in your system but should look a little like this: By default None will be active, meaning no GPU acceleration is used for rendering and it all happens on the CPU. In general, on a PC/Laptop with an NVIDIA GPU the CUDA option is to be preferred, although OptiX might work well as an alternative (but will only be available on newer GPUs). On a system with an AMD or Intel GPU you can only choose OpenCL . For more detail you can consult the relevant section in the Blender documentation. A thing called EEVEE? \u00b6 When consulting other Blender materials, specifically on rendering, you may see references to EEVEE. This is another render engine available in Blender, which is different from the Cycles engine we will be using in this course. Even though EEVEE is meant for fast and highly interactive rendering work, even more so than the Cycles preview render we showed so far, we do not use EEVEE in this course. The reasons for this are: We personally find Cycles to be more intuitive to work with and explain, as it is built around the path tracing algorithm, which is easy to understand. EEVEE's rendering setup is somewhat more complex, as it uses a combination of different techniques. Cycles can render both on CPU and GPU, whereas EEVEE can only render on a GPU (more specifically, it needs OpenGL) Cycles is more feature-complete, whereas EEVEE has some limitations compared to Cycles EEVEE doesn't (easily) support headless rendering, i.e. starting a Blender render from the command-line without showing the user interface, which is especially relevant when rendering long animations on an HPC system Although Cycles and EEVEE are getting closer in features with every Blender release they are still not fully equivalent. This would mean having to dedicate extra course material on these differences If you do like more information on EEVEE then please check this section in the Blender manual.","title":"First steps in the user interface"},{"location":"modules/basics/blender_basics/first_steps/#first-steps-in-the-user-interface","text":"","title":"First steps in the user interface"},{"location":"modules/basics/blender_basics/first_steps/#starting-blender","text":"In general Blender isn't different to start than any other GUI application. However, warning and error messages will be printed to the console window. It depends on the operating system you're working on how the console window is available: (All operating systems) If you start Blender from a terminal window, e.g. xterm or Windows Command window, then Blender output will be printed in that window (Windows only) If Blender was started from the Start menu then you can toggle the associated console window using the Window > Toggle System Console option See this section in the Blender manual for more details on starting Blender from the command line and details specific for each operating system.","title":"Starting Blender"},{"location":"modules/basics/blender_basics/first_steps/#fundamentals","text":"We will go over fundamentals of the user interface in terms of interaction and areas, specifically the 3D view and Outliner. We also touch on a number of often-performed operations, such as rendering an image and changing the set of selected objects. We also look a bit closer into keyboard shortcuts and menus. It's probably best to follow along in Blender on your own system while viewing the video. The files used in the video can be found under data/blender_basics . Hint If the interaction in the 3D view isn't smooth on your PC/laptop something might be wrong in the setup of your system. Please contact us if this appears to be the case. Hint If the 3D view (or some of the other areas) suddenly appear to behave strangely, or you now see your mesh with all kinds of dots or lines then you might have accidentally entered the so-called \"Edit Mode\" or any of the other modes available. Check the menu in the upper left of the 3D view, which should read Object Mode : In this course we will only Object Mode (and briefly use Vertex Paint mode in one of the exercises). You can use the drop-down menu shown above (or the Ctrl-Tab menu in the 3D view) and pick Object Mode to get back to the correct mode. Summary of 3D view navigation (see also the cheat sheet under Navigation): MMB = rotate view Scrollwheel or Ctrl+MMB = zoom view Shift+MMB = translate view Home = zoom out to show all objects","title":"Fundamentals"},{"location":"modules/basics/blender_basics/first_steps/#changes-to-default-settings","text":"Note It's not required to change these defaults, but we find they help in working with Blender Under Edit > Preferences , then in Interface tab: Under Display disable Splash Screen Under Editors > Temporary Editors set Render In to Image Editor . This will cause the rendered image to be displayed as a replacement of the 3D view, instead of in a separate window. After rendering press Escape to get back the 3D view. Under Editors > Status Bar enable Scene Statistics , System Memory and Video Memory . This will show extra scene statistics in the status bar. Hint Another option which you might consider enabling is Orbit Around Selection . By default this is turned off and in that mode any rotation of the 3D viewport will be around the center of the view, which might cause selected objects to go out of view. When the option is turned on viewport rotation will be around the selected object(s), always keeping them in view. You can find this option on the Navigation tab under Orbit & Pan .","title":"Changes to default settings"},{"location":"modules/basics/blender_basics/first_steps/#enabling-gpu-based-rendering-in-cycles","text":"Note GPU rendering in Blender is only supported on Windows and Linux; macOS is currently not supported. In general GPU-based rendering is a lot faster than rendering on a multi-core CPU. However, only by making a comparison on your particular system can really find out if GPU rendering is a good option for you. Apart from performance there are some other aspects to consider with GPU rendering: When doing a GPU render your desktop environment might become less responsive A GPU usually has less memory available, which might cause problems with really large scenes In case you want to try enabling GPU rendering go to the Preferences window ( Edit > Preferences ) and then the System tab. The settings available under Cycles Render Device are somewhat dependent on the hardware in your system but should look a little like this: By default None will be active, meaning no GPU acceleration is used for rendering and it all happens on the CPU. In general, on a PC/Laptop with an NVIDIA GPU the CUDA option is to be preferred, although OptiX might work well as an alternative (but will only be available on newer GPUs). On a system with an AMD or Intel GPU you can only choose OpenCL . For more detail you can consult the relevant section in the Blender documentation.","title":"Enabling GPU-based rendering in Cycles"},{"location":"modules/basics/blender_basics/first_steps/#a-thing-called-eevee","text":"When consulting other Blender materials, specifically on rendering, you may see references to EEVEE. This is another render engine available in Blender, which is different from the Cycles engine we will be using in this course. Even though EEVEE is meant for fast and highly interactive rendering work, even more so than the Cycles preview render we showed so far, we do not use EEVEE in this course. The reasons for this are: We personally find Cycles to be more intuitive to work with and explain, as it is built around the path tracing algorithm, which is easy to understand. EEVEE's rendering setup is somewhat more complex, as it uses a combination of different techniques. Cycles can render both on CPU and GPU, whereas EEVEE can only render on a GPU (more specifically, it needs OpenGL) Cycles is more feature-complete, whereas EEVEE has some limitations compared to Cycles EEVEE doesn't (easily) support headless rendering, i.e. starting a Blender render from the command-line without showing the user interface, which is especially relevant when rendering long animations on an HPC system Although Cycles and EEVEE are getting closer in features with every Blender release they are still not fully equivalent. This would mean having to dedicate extra course material on these differences If you do like more information on EEVEE then please check this section in the Blender manual.","title":"A thing called EEVEE?"},{"location":"modules/basics/blender_basics/introduction/","text":"Introduction \u00b6 This first part of the course is meant to introduce you to Blender, its user interface and basic features. We'll start with a brief look into some of the background of Blender and challenges in learning it. Hint A lot of new concepts and UI elements will be introduced in the upcoming videos. It probably works best to watch video(s) limited to a certain topic, try the operations shown and corresponding exercise(s) in Blender yourself, before moving on to the next topic.","title":"Introduction"},{"location":"modules/basics/blender_basics/introduction/#introduction","text":"This first part of the course is meant to introduce you to Blender, its user interface and basic features. We'll start with a brief look into some of the background of Blender and challenges in learning it. Hint A lot of new concepts and UI elements will be introduced in the upcoming videos. It probably works best to watch video(s) limited to a certain topic, try the operations shown and corresponding exercise(s) in Blender yourself, before moving on to the next topic.","title":"Introduction"},{"location":"modules/basics/blender_basics/objects_3d_cursor_undo/","text":"Objects, 3D cursor, Undo \u00b6 A short section on how to add, duplicate or delete objects. What the 3D cursor is and what role it plays, plus the undo system.","title":"Objects, 3D cursor, Undo"},{"location":"modules/basics/blender_basics/objects_3d_cursor_undo/#objects-3d-cursor-undo","text":"A short section on how to add, duplicate or delete objects. What the 3D cursor is and what role it plays, plus the undo system.","title":"Objects, 3D cursor, Undo"},{"location":"modules/basics/blender_basics/scene_hierarchy/","text":"Scene hierarchy \u00b6 We briefly look a the way a scene is organized and how this interacts with the properties panel. The above actually isn't the full story, as we only briefly mention collections. In the official Blender manual you can find more detail on collections here , in case you want to know more.","title":"Scene hierarchy"},{"location":"modules/basics/blender_basics/scene_hierarchy/#scene-hierarchy","text":"We briefly look a the way a scene is organized and how this interacts with the properties panel. The above actually isn't the full story, as we only briefly mention collections. In the official Blender manual you can find more detail on collections here , in case you want to know more.","title":"Scene hierarchy"},{"location":"modules/basics/blender_basics/transformations/","text":"Transformations \u00b6 This might be a bit more of a technical subject and deals with the way 3D objects can be transformed in a scene. The transformations exercise will allow you to try most of these operations yourself. But if you wanto to follow along with the video then the file used is data/blender_basics/three_objects.blend . Summary of shortcut keys \u00b6 G to enter translation mode (\"grab\") S to enter scale mode R to enter rotation mode LMB or Enter to confirm the current transformation, Escape to cancel while still one of the transformation modes While in a transformation mode press X , Y or Z to constrain the transformation to the X, Y or Z axis, respectively. While in a transformation mode press Shift+X , Shift+Y or Shift+Z to constrain the transformation to the plane perpendicular to the X, Y or Z axis, respectively.","title":"Transformations"},{"location":"modules/basics/blender_basics/transformations/#transformations","text":"This might be a bit more of a technical subject and deals with the way 3D objects can be transformed in a scene. The transformations exercise will allow you to try most of these operations yourself. But if you wanto to follow along with the video then the file used is data/blender_basics/three_objects.blend .","title":"Transformations"},{"location":"modules/basics/blender_basics/transformations/#summary-of-shortcut-keys","text":"G to enter translation mode (\"grab\") S to enter scale mode R to enter rotation mode LMB or Enter to confirm the current transformation, Escape to cancel while still one of the transformation modes While in a transformation mode press X , Y or Z to constrain the transformation to the X, Y or Z axis, respectively. While in a transformation mode press Shift+X , Shift+Y or Shift+Z to constrain the transformation to the plane perpendicular to the X, Y or Z axis, respectively.","title":"Summary of shortcut keys"},{"location":"modules/basics/blender_basics/ui/","text":"User interface configuration \u00b6 A short section on how the Blender user interface system works and how to configure it to your liking. This is useful to know as the current UI layout is saved in a Blender file, so files you get from some other source might look very different.","title":"User interface configuration"},{"location":"modules/basics/blender_basics/ui/#user-interface-configuration","text":"A short section on how the Blender user interface system works and how to configure it to your liking. This is useful to know as the current UI layout is saved in a Blender file, so files you get from some other source might look very different.","title":"User interface configuration"},{"location":"modules/basics/importing_data/exercise_vertex_colors/","text":"(EXERCISE) Vertex colors \u00b6 Check if you have a menu option to import X3D format. For this, go to File -> Import and check if there is an entry X3D Extensible 3D (.x3d/.wrl) . If you do NOT have the X3D import option then perform the following steps to enable the X3D add-on (otherwise continue to step 3): Open the preferences window with Edit -> Preferences Switch to the Add-ons tab In the search field (with the little spyglass) enter \"X3D\", the list should get reduced to just one entry Enable the checkbox left of \"Import-Export: Web3D X3D/VRML2 format\" Close the preferences window (it saves the settings automatically) Under File -> Import there should now be a new entry X3D Extensible 3D (.x3d/.wrl) Importing data always adds to the current scene. So start with an empty scene, i.e. delete all objects. Make sure Blender is set to use Cycles as the renderer. For this, switch to the Render tab in the properties area. Check the Render Engine drop-down, it should be set to Cycles . Import file glyphs.x3d using File > Import > X3D Extensible 3D . In the importer settings (on the right side of the window when selecting the file to import) use Forward: Y Forward , Up: Z Up . This X3D file holds a scene exported from ParaView. Inspect the objects in the scene to get some idea of what it contains. Delete all the lights in the scene to clear everything up a bit. Add a single sun light in return. This 3D model has so-called \"vertex colors\". This means that each vertex of the geometry has an associated RGB color, which is a common way to show data values in a visualization. There are a few ways to inspect if, and what, vertex colors a model has. First, there is the so-called Vertex Paint mode. In this mode vertex colors are shown when they are available and can even be edited. To enable Vertex Paint mode: Make the 3D arrows in the scene the single selected object Open the Mode pie menu with Ctrl-TAB and switch to Vertex Paint . An alternative is to use the menu showing Object Mode in the upper-left of the 3D view header. The 3D View should now show the arrow geometry colored by its vertex colors. The colors shown are velocity values from a computational flow simulation, using the well-known rainbow color scale (blue \u2192 green \u2192 yellow \u2192 orange \u2192 red for a low-to-high value range) Two things have changed in the interface: 1) the cursor is now a circle, 2) the tool shelf on the left now shows color operations (paint brush = Draw, drop = Blur, ...) As this is Vertex Paint mode you can actually alter the vertex colors. This works quite similar to a normal paint program, like Photoshop or the GIMP, but in 3D. Although it may not make much sense to change colors that are based on simulation output (like these CFD results) it can still be interesting to clean up or highlight vertex-colored geometry. Experiment with vertex painting: move the cursor over part of the arrow geometry, press and hold LMB and move the mouse. See what happens. Switch to the Active Tool and Workspace settings tab in the properties area You can change the color you're painting with with the color wheel. Also check out the radius and strength settings. Change back to Object Mode using the Ctrl-TAB mode menu when you're done playing around. Note that the arrows no longer show the vertex colors. The second way to use vertex colors is to apply them during rendering. If you've screwed up the vertex colors really badly in the previous steps you might want to reimport the model... Make the 3D arrows in the scene the single selected object Switch to the Object Data tab in the properties Check that there is an entry \"Col\" in the list under Vertex Colors . A model can have multiple sets of vertex colors, but this file has only one set called \"Col\" Now we will set up a material using the vertex colors stored in the \"Col\" layer. Go to the Material tab Select the material called \"Material\" in the drop-down list left of the New button. This set the (grey) material \"Material\" on the arrows geometry. Press F12 (or use interactive render) to get a rendered view of the current scene. You'll notice that all the geometry is grey/white, i.e. no vertex colors are used. We'll now alter the material to use vertex colors. In the settings of the material there is a field called \"Base Color\" with a white area right of it. This setting controls the color of the geometry. Click the button right of the color area (it has a small white circle in it) Pick Attribute from the left-most column labeled Input . This specifies that the material color should be based on an attribute value. Base Color is now set to Attribute | Color . Directly below the entry there is a Name field. Enter \"Col\" here. This specifies that the attribute to use is called \"Col\" (i.e. our vertex colors) Now render the scene again The rendered image should now be showing the arrow geometry colored by vertex colors","title":"(EXERCISE) Vertex colors"},{"location":"modules/basics/importing_data/exercise_vertex_colors/#exercise-vertex-colors","text":"Check if you have a menu option to import X3D format. For this, go to File -> Import and check if there is an entry X3D Extensible 3D (.x3d/.wrl) . If you do NOT have the X3D import option then perform the following steps to enable the X3D add-on (otherwise continue to step 3): Open the preferences window with Edit -> Preferences Switch to the Add-ons tab In the search field (with the little spyglass) enter \"X3D\", the list should get reduced to just one entry Enable the checkbox left of \"Import-Export: Web3D X3D/VRML2 format\" Close the preferences window (it saves the settings automatically) Under File -> Import there should now be a new entry X3D Extensible 3D (.x3d/.wrl) Importing data always adds to the current scene. So start with an empty scene, i.e. delete all objects. Make sure Blender is set to use Cycles as the renderer. For this, switch to the Render tab in the properties area. Check the Render Engine drop-down, it should be set to Cycles . Import file glyphs.x3d using File > Import > X3D Extensible 3D . In the importer settings (on the right side of the window when selecting the file to import) use Forward: Y Forward , Up: Z Up . This X3D file holds a scene exported from ParaView. Inspect the objects in the scene to get some idea of what it contains. Delete all the lights in the scene to clear everything up a bit. Add a single sun light in return. This 3D model has so-called \"vertex colors\". This means that each vertex of the geometry has an associated RGB color, which is a common way to show data values in a visualization. There are a few ways to inspect if, and what, vertex colors a model has. First, there is the so-called Vertex Paint mode. In this mode vertex colors are shown when they are available and can even be edited. To enable Vertex Paint mode: Make the 3D arrows in the scene the single selected object Open the Mode pie menu with Ctrl-TAB and switch to Vertex Paint . An alternative is to use the menu showing Object Mode in the upper-left of the 3D view header. The 3D View should now show the arrow geometry colored by its vertex colors. The colors shown are velocity values from a computational flow simulation, using the well-known rainbow color scale (blue \u2192 green \u2192 yellow \u2192 orange \u2192 red for a low-to-high value range) Two things have changed in the interface: 1) the cursor is now a circle, 2) the tool shelf on the left now shows color operations (paint brush = Draw, drop = Blur, ...) As this is Vertex Paint mode you can actually alter the vertex colors. This works quite similar to a normal paint program, like Photoshop or the GIMP, but in 3D. Although it may not make much sense to change colors that are based on simulation output (like these CFD results) it can still be interesting to clean up or highlight vertex-colored geometry. Experiment with vertex painting: move the cursor over part of the arrow geometry, press and hold LMB and move the mouse. See what happens. Switch to the Active Tool and Workspace settings tab in the properties area You can change the color you're painting with with the color wheel. Also check out the radius and strength settings. Change back to Object Mode using the Ctrl-TAB mode menu when you're done playing around. Note that the arrows no longer show the vertex colors. The second way to use vertex colors is to apply them during rendering. If you've screwed up the vertex colors really badly in the previous steps you might want to reimport the model... Make the 3D arrows in the scene the single selected object Switch to the Object Data tab in the properties Check that there is an entry \"Col\" in the list under Vertex Colors . A model can have multiple sets of vertex colors, but this file has only one set called \"Col\" Now we will set up a material using the vertex colors stored in the \"Col\" layer. Go to the Material tab Select the material called \"Material\" in the drop-down list left of the New button. This set the (grey) material \"Material\" on the arrows geometry. Press F12 (or use interactive render) to get a rendered view of the current scene. You'll notice that all the geometry is grey/white, i.e. no vertex colors are used. We'll now alter the material to use vertex colors. In the settings of the material there is a field called \"Base Color\" with a white area right of it. This setting controls the color of the geometry. Click the button right of the color area (it has a small white circle in it) Pick Attribute from the left-most column labeled Input . This specifies that the material color should be based on an attribute value. Base Color is now set to Attribute | Color . Directly below the entry there is a Name field. Enter \"Col\" here. This specifies that the attribute to use is called \"Col\" (i.e. our vertex colors) Now render the scene again The rendered image should now be showing the arrow geometry colored by vertex colors","title":"(EXERCISE) Vertex colors"},{"location":"modules/basics/importing_data/exercise_your_data/","text":"(EXERCISE) Your own data \u00b6 Note If you do not have data that you want to import in Blender then you can skip this part. Think about your own data What is the goal for importing the data? What visual representation(s) of the data do you aim for? What scene object types do you need for this? What approach would you use to get it into Blender? Challenges? Problems? Try to import your own data, or a representative subset, using your chosen approach.","title":"(EXERCISE) Your own data"},{"location":"modules/basics/importing_data/exercise_your_data/#exercise-your-own-data","text":"Note If you do not have data that you want to import in Blender then you can skip this part. Think about your own data What is the goal for importing the data? What visual representation(s) of the data do you aim for? What scene object types do you need for this? What approach would you use to get it into Blender? Challenges? Problems? Try to import your own data, or a representative subset, using your chosen approach.","title":"(EXERCISE) Your own data"},{"location":"modules/basics/importing_data/introduction/","text":"Introduction \u00b6 This chapter will present a lot of information on getting data into Blender through importing. It will describe the overall approach, available file formats and their relative strengths/weaknesses and look closer into handling specific types of data, specifically point data and volumetric data. Most of this chapter consists of the video presentation below, which covers quite a few subjects. After you are done viewing the video there is a first exercise on vertex colors, which uses data we provide. While the second exercise is more of a guideline for when you want to import your own data. As mentioned in the presentation the PDF slides for this chapter contain some more reference material on getting data from ParaView , VisIt and VTK .","title":"Introduction"},{"location":"modules/basics/importing_data/introduction/#introduction","text":"This chapter will present a lot of information on getting data into Blender through importing. It will describe the overall approach, available file formats and their relative strengths/weaknesses and look closer into handling specific types of data, specifically point data and volumetric data. Most of this chapter consists of the video presentation below, which covers quite a few subjects. After you are done viewing the video there is a first exercise on vertex colors, which uses data we provide. While the second exercise is more of a guideline for when you want to import your own data. As mentioned in the presentation the PDF slides for this chapter contain some more reference material on getting data from ParaView , VisIt and VTK .","title":"Introduction"},{"location":"modules/basics/rendering_lighting_materials/composition/","text":"Composition \u00b6 Below you'll find supplementary video on image composition. It is supplementary in a way that you won't need it to do the exercises but it might help you with your future Blender renders. This video will give you some practical guidelines that could give your final renders the extra edge it needs to stand out:","title":"Composition"},{"location":"modules/basics/rendering_lighting_materials/composition/#composition","text":"Below you'll find supplementary video on image composition. It is supplementary in a way that you won't need it to do the exercises but it might help you with your future Blender renders. This video will give you some practical guidelines that could give your final renders the extra edge it needs to stand out:","title":"Composition"},{"location":"modules/basics/rendering_lighting_materials/introduction/","text":"Introduction \u00b6 This part of the course is all about the aesthetics, the last part of the pipeline. You know now of the basics and by now you are able to import some scientific data within Blender, the final thing that is left is how the final image will look like. What does the surface of your 3D-model will look like, what tangible texture and colors it has, how it will be illuminated and finally how it will be composed. All these things go hand-in-hand and these things need to be in balance to create an aesthetically pleasing image. Before you start with the exercises the following video will give you the theoretical and practical background to make these exercises. In this video there are some Blender walk-throughs, if you want to follow along you can use the walk-through files in the ./walkthroughs/06-rendering-lighting-and-materials directory.","title":"Introduction"},{"location":"modules/basics/rendering_lighting_materials/introduction/#introduction","text":"This part of the course is all about the aesthetics, the last part of the pipeline. You know now of the basics and by now you are able to import some scientific data within Blender, the final thing that is left is how the final image will look like. What does the surface of your 3D-model will look like, what tangible texture and colors it has, how it will be illuminated and finally how it will be composed. All these things go hand-in-hand and these things need to be in balance to create an aesthetically pleasing image. Before you start with the exercises the following video will give you the theoretical and practical background to make these exercises. In this video there are some Blender walk-throughs, if you want to follow along you can use the walk-through files in the ./walkthroughs/06-rendering-lighting-and-materials directory.","title":"Introduction"},{"location":"modules/basics/rendering_lighting_materials/rlm_assignment/","text":"(EXERCISE) Rendering, lighting and materials \u00b6 Open the rlm_assignment.blend file and you'll see several objects in the scene: a ground plane, a plateau, Suzanne (the monkey head) and 3 knots. The goal of this assignment is to place some lights, set the camera parameters to your liking, add materials to the objects and render the final image. We'll do this in steps. Tip To view your result with realistic lighting and materials use the Shading pie menu, which opens with the Z key: Option Rendered shows realistic lighting and materials, with slower interaction Option Solid shows simple colors and lighting, with faster interaction Lighting - Creating light sources \u00b6 To see what we are doing in Rendered shading ( Z - Rendered ) we first need to add the lighting. Add one or two sun lights by either using the 3D view menu in the header ( Add > Light > Sun ) or use Shift-A > Light > Sun in the 3D view Try to position and rotate the lights so that they light the objects under a bit of an angle ( G and R keys). Before we change the appearance of the lights we need to switch to Rendered using the Shading pie menu ( Z > Rendered ) Now adjust the Color and Strength settings under the Object Data properties tab in the properties panel , perhaps try to give one the lights a warm yellowish sun-like color and the other a more less strong blueish and cold color. In the same properties panel tab, try to adjust the Angle (or Size for the other light types) of the sun light and see how it affects the shadows. Small angles (or sizes) create hard shadows, which are ideal to see minor details and large angles (or sizes) create soft shadows, which is more suited to see the overall form of the objects and are less straining on the eye. Now in the same properties editor tab, try out some different lamp types ( Point , Sun , ...) to experiment with the different lighting effects they produce. Bonus : If setting up the lamps is too cumbersome, you can go to the World tab in the properties editor and click the little globe drop-down menu button at the top and select the HDRIWorldLighting . This will enable predefined environment lighting using a 360 image of somebody's living room. Do make sure that you de-activate ( in the Outliner ) or remove the lamps to see the full effect. Camera - Setting the starting point of the light paths \u00b6 With the lighting setup, we can now see what each of the camera settings does. Or from the light ray paths perspective: configure the starting point of the light rays. First you need to be in the camera view to be able to see the changes of the camera settings by selecting with the View pie menu ( `-button ) the View Camera option or through the 3D view menu in the header ( View > Viewpoint > Camera ). Try changing the camera's focal length. For this, select the camera Camera and go the Lens settings in the Object Data properties tab in the properties panel . There you can find the Focal Length setting, try for example values 18, 50 and 100 and see what effect this has. Notice that when you set the Focal Length to a lower value you might see clipping (the scene is cut off from a certain distance). This can be changed by setting the Clip Start in the same Lens section to a lower value, e.g. 0.01. Finally set the focal length to the desired value. Next we are going to bring the focus to a chosen object in the scene with the depth of field settings. For this, select the camera, scroll down in the Object Data properties tab in the properties panel to the Depth of Field settings. Check the check-box before Depth of Field to activate the depth of field. Now try to set the Focus on Object value to the Suzanne object and test different values for the Aperture > F-Stop setting. When you are done, disable depth of field again. This makes the material editing easier. If the lighting gives the desired effect looking through the configured camera then you can give the objects the look you want with materials in the next section. Materials - How will the light paths bounce? \u00b6 To design how the light is reflected or refracted off the objects you are going to give each object a different material. For each object (including ground plane and plateau): Select the object and go to the Material tab in the properties editor. In the Material tab click the New button. Then under the Surface section set the Surface parameter to either Diffuse BSDF , Glossy BSDF or Principled BSDF . Try to play with the material settings Roughness and Color (the latter is called Base Color for the Principled BSDF) Bonus : When you feel that the roughness and the color alone didn't give you the look that you want with the Principled BSDF then also try and have a look at the other, in the slides, mentioned settings, Metallic , Transmission , IOR and Subsurface . Rendering - Creating your final image \u00b6 Lights, camera, (materials,) set aaaaaaand action!... Now you will set the desired render settings to generate the final image! Go to the properties editor and set the following settings: - Render properties tab Set Device to GPU Compute . If your device doesn't have a (powerful) GPU set it to CPU . Sampling section: set Render to 128 Light Paths section: set Clamping > Indirect Light to 1.0 Output tab Dimensions section: set Resolution to 1920x1080, 100%. If everything is set, press F12 . Now the Image editor will replace the 3D view and your image will slowly be rendered in small rectangular image parts called \"tiles\". Finally when the image looks the way you want don't forget to save it! In the Image editor go to the Image menu and click on Save As... and choose a location and save the image.","title":"(EXERCISE) Rendering, lighting and materials"},{"location":"modules/basics/rendering_lighting_materials/rlm_assignment/#exercise-rendering-lighting-and-materials","text":"Open the rlm_assignment.blend file and you'll see several objects in the scene: a ground plane, a plateau, Suzanne (the monkey head) and 3 knots. The goal of this assignment is to place some lights, set the camera parameters to your liking, add materials to the objects and render the final image. We'll do this in steps. Tip To view your result with realistic lighting and materials use the Shading pie menu, which opens with the Z key: Option Rendered shows realistic lighting and materials, with slower interaction Option Solid shows simple colors and lighting, with faster interaction","title":"(EXERCISE) Rendering, lighting and materials"},{"location":"modules/basics/rendering_lighting_materials/rlm_assignment/#lighting-creating-light-sources","text":"To see what we are doing in Rendered shading ( Z - Rendered ) we first need to add the lighting. Add one or two sun lights by either using the 3D view menu in the header ( Add > Light > Sun ) or use Shift-A > Light > Sun in the 3D view Try to position and rotate the lights so that they light the objects under a bit of an angle ( G and R keys). Before we change the appearance of the lights we need to switch to Rendered using the Shading pie menu ( Z > Rendered ) Now adjust the Color and Strength settings under the Object Data properties tab in the properties panel , perhaps try to give one the lights a warm yellowish sun-like color and the other a more less strong blueish and cold color. In the same properties panel tab, try to adjust the Angle (or Size for the other light types) of the sun light and see how it affects the shadows. Small angles (or sizes) create hard shadows, which are ideal to see minor details and large angles (or sizes) create soft shadows, which is more suited to see the overall form of the objects and are less straining on the eye. Now in the same properties editor tab, try out some different lamp types ( Point , Sun , ...) to experiment with the different lighting effects they produce. Bonus : If setting up the lamps is too cumbersome, you can go to the World tab in the properties editor and click the little globe drop-down menu button at the top and select the HDRIWorldLighting . This will enable predefined environment lighting using a 360 image of somebody's living room. Do make sure that you de-activate ( in the Outliner ) or remove the lamps to see the full effect.","title":"Lighting - Creating light sources"},{"location":"modules/basics/rendering_lighting_materials/rlm_assignment/#camera-setting-the-starting-point-of-the-light-paths","text":"With the lighting setup, we can now see what each of the camera settings does. Or from the light ray paths perspective: configure the starting point of the light rays. First you need to be in the camera view to be able to see the changes of the camera settings by selecting with the View pie menu ( `-button ) the View Camera option or through the 3D view menu in the header ( View > Viewpoint > Camera ). Try changing the camera's focal length. For this, select the camera Camera and go the Lens settings in the Object Data properties tab in the properties panel . There you can find the Focal Length setting, try for example values 18, 50 and 100 and see what effect this has. Notice that when you set the Focal Length to a lower value you might see clipping (the scene is cut off from a certain distance). This can be changed by setting the Clip Start in the same Lens section to a lower value, e.g. 0.01. Finally set the focal length to the desired value. Next we are going to bring the focus to a chosen object in the scene with the depth of field settings. For this, select the camera, scroll down in the Object Data properties tab in the properties panel to the Depth of Field settings. Check the check-box before Depth of Field to activate the depth of field. Now try to set the Focus on Object value to the Suzanne object and test different values for the Aperture > F-Stop setting. When you are done, disable depth of field again. This makes the material editing easier. If the lighting gives the desired effect looking through the configured camera then you can give the objects the look you want with materials in the next section.","title":"Camera - Setting the starting point of the light paths"},{"location":"modules/basics/rendering_lighting_materials/rlm_assignment/#materials-how-will-the-light-paths-bounce","text":"To design how the light is reflected or refracted off the objects you are going to give each object a different material. For each object (including ground plane and plateau): Select the object and go to the Material tab in the properties editor. In the Material tab click the New button. Then under the Surface section set the Surface parameter to either Diffuse BSDF , Glossy BSDF or Principled BSDF . Try to play with the material settings Roughness and Color (the latter is called Base Color for the Principled BSDF) Bonus : When you feel that the roughness and the color alone didn't give you the look that you want with the Principled BSDF then also try and have a look at the other, in the slides, mentioned settings, Metallic , Transmission , IOR and Subsurface .","title":"Materials - How will the light paths bounce?"},{"location":"modules/basics/rendering_lighting_materials/rlm_assignment/#rendering-creating-your-final-image","text":"Lights, camera, (materials,) set aaaaaaand action!... Now you will set the desired render settings to generate the final image! Go to the properties editor and set the following settings: - Render properties tab Set Device to GPU Compute . If your device doesn't have a (powerful) GPU set it to CPU . Sampling section: set Render to 128 Light Paths section: set Clamping > Indirect Light to 1.0 Output tab Dimensions section: set Resolution to 1920x1080, 100%. If everything is set, press F12 . Now the Image editor will replace the 3D view and your image will slowly be rendered in small rectangular image parts called \"tiles\". Finally when the image looks the way you want don't forget to save it! In the Image editor go to the Image menu and click on Save As... and choose a location and save the image.","title":"Rendering - Creating your final image"},{"location":"modules/basics/simple_mesh_editing/introduction/","text":"Introduction \u00b6 This chapter will introduce the basic mesh editing tools available within Blender. The basic mesh editing will be performed with the so called modifiers, these modifiers make it relatively easy to do large mesh editing operations that can greatly impact the visual representation of your 3D-models. Below you'll find a video that will give you a theoretical introduction followed by a practical walk-through in Blender. If you want to follow along with the walk-through you can find the Blend files in the walk-through directory ./walkthroughs/04-simple-mesh-editing . After you watched the video about simple mesh-editing you are ready for the exercises!","title":"Introduction"},{"location":"modules/basics/simple_mesh_editing/introduction/#introduction","text":"This chapter will introduce the basic mesh editing tools available within Blender. The basic mesh editing will be performed with the so called modifiers, these modifiers make it relatively easy to do large mesh editing operations that can greatly impact the visual representation of your 3D-models. Below you'll find a video that will give you a theoretical introduction followed by a practical walk-through in Blender. If you want to follow along with the walk-through you can find the Blend files in the walk-through directory ./walkthroughs/04-simple-mesh-editing . After you watched the video about simple mesh-editing you are ready for the exercises!","title":"Introduction"},{"location":"modules/basics/simple_mesh_editing/sme_assignment/","text":"(EXERCISE) Simple mesh editing \u00b6 In this exercise you will use some mesh modifiers on an iso-surface of a CT scan of a fish and try to see if you can reveal the insides. Once you opened the exercise blend file sme_assignment.blend you'll see the fish iso-surface above a plane. Decimate - Reducing the triangles \u00b6 The fish 3D model, for your convenience, has been divided into two parts: the fishskin and fishbones. Combined, this model has a large amount of triangles (155k for the fishskin and 573k for the fishbones). On lower end devices this can slow everything down to a crawl. In order to be able to add modifiers or edit the meshes with reasonable interactivity you first need to decimate the meshes. The decimation is for reducing the number of triangles, by merging adjacent triangles together into one, iteratively. Select the fishskin by clicking on the fishskin with LMB . Once selected go the Modifiers tab in the properties editor. Click Add Modifier and add the Decimate modifier (it's in the Generate column). Keep the decimation type set to Collapse , set the Ratio to 0.5 and press Enter . The mesh processing will take a couple of seconds but will immediately reduce the number of triangles to ~77k, which is visible in the modifier under Face Count . You can even reduce it to a lower number but it might affect the appearance and shape of the model negatively by creating hard edges on the surface. Once you are satisfied with the results press Apply , under the dropdown-menu arrow to the right of Decimate , or by pressing Ctrl-A , while focused on the Decimate modifier, to make the changes permanent. Again, this can take a few seconds. Now that the fishskin triangles have been reduced, select it and press H to hide it or click the icon in the Outliner . This simultaneously hides the fishskin and reveal the fishbones. Preform the same steps the fishbones and try to reduce the triangle count significantly without affecting the appearance of the model. Now unhide the fishskin again for the next assignment by clicking the icon. Smooth - Ironing the creases \u00b6 The geometry of the fishskin and the fishbones both look a bit rough because of the iso-surface extraction algorithm. If that is not desired, the rough edges can be smoothed out with the Smooth Modifier . Select the fishskin model by clicking on the fishskin with LMB . Go to the Modifiers tab in the properties editor. Click Add Modifier and add the Smooth modifier (it's in the Deform column). Keep the Factor at 0.5 but increase the Repeat to 5 . Watch out with using the slider, every change re-triggers the modifier and when you accidentally slide to a high number it will take a while to calculate. Unfortunately you will notices that the Smooth modifier creates tears along the skin model, this conveniently revealed that the underlying mesh triangles are not fully connected and are present in connected patches. These patches stems from the creation of this model where the calculation of the geometry was done in multiple processors and each patch was created by a separate process. This can be fixed in the Edit-mode but that will be covered in the advanced course. The Factor is good as it is, but changing the value shows what kind of drastic effect it has. Once you are satisfied with the smoothness of the fishskin press Apply and try to do the same with the fishbones. Boolean - Slicing the geometry \u00b6 If you wanna both show the inside of the fish with the context of the outside you can use slice through the fishskin model and reveal the insides of the fish by using a Boolean Modifier . Before you add the Boolean Modifier you first need to reveal the fishskin mesh object again by clicking the icon in the Outliner . Select the fishskin mesh object and go to the Modifiers tab in the properties editor to add a Boolean modifier (it's in the Generate column). Now that the Boolean modifier is added we still miss another 3D mesh object to perform the Boolean operation with. You are now gonna prepare the other mesh object. Move the mouse into the 3D view and add a new UV sphere with Shift-A > Mesh > UV Sphere Scale and translate ( S and G keys) the UV sphere so that it overlaps a part of the fish which you want to clip away. The UV sphere is now shown as a solid surface, which is not desirable when you want to use it for clipping because you want to see through it. You can change the representation of an object in the 3D view using the Object properties under Viewport Display : set Display As to Wire . Also when you want to look at the results in Rendered mode you need to make the sphere invisible using the Ray Visibility settings under Visibility : disable all check-boxes (Camera, Diffuse, Glossy, Transmission, Volume Scatter and Shadow) Now that you prepared the mesh object to preform the Boolean operation with, you can continue setting up the Boolean modifier. Select the fishskin mesh object and go to the Modifiers tab in the properties editor to reveal the already added Boolean modifier. Now under Object , select the Sphere mesh object. Before we want to start moving the clipping Sphere around we want to change the Solver to Fast . This is more simpler and better performing solver and in our case, with the underlying broken patched mesh, also a better option since this solver is able to handle this type of geometry. Now if you select the Sphere object and translate and scale it over the fishskin mesh object you can clip away any desired part as the Boolean modifier updates in real time. As you might have noticed, this Boolean modifier does have some problems with this current mesh and placement of the clipping sphere must be precise. This off course is not always the cause but it should be kept in mind when working with the Boolean modifier. Finally you can view your results with Cycles with Rendered shading ( Z > Rendered ) for better lighting and materials. Or you can give the camera a better position and make a nice final render.","title":"(EXERCISE) Simple mesh editing"},{"location":"modules/basics/simple_mesh_editing/sme_assignment/#exercise-simple-mesh-editing","text":"In this exercise you will use some mesh modifiers on an iso-surface of a CT scan of a fish and try to see if you can reveal the insides. Once you opened the exercise blend file sme_assignment.blend you'll see the fish iso-surface above a plane.","title":"(EXERCISE) Simple mesh editing"},{"location":"modules/basics/simple_mesh_editing/sme_assignment/#decimate-reducing-the-triangles","text":"The fish 3D model, for your convenience, has been divided into two parts: the fishskin and fishbones. Combined, this model has a large amount of triangles (155k for the fishskin and 573k for the fishbones). On lower end devices this can slow everything down to a crawl. In order to be able to add modifiers or edit the meshes with reasonable interactivity you first need to decimate the meshes. The decimation is for reducing the number of triangles, by merging adjacent triangles together into one, iteratively. Select the fishskin by clicking on the fishskin with LMB . Once selected go the Modifiers tab in the properties editor. Click Add Modifier and add the Decimate modifier (it's in the Generate column). Keep the decimation type set to Collapse , set the Ratio to 0.5 and press Enter . The mesh processing will take a couple of seconds but will immediately reduce the number of triangles to ~77k, which is visible in the modifier under Face Count . You can even reduce it to a lower number but it might affect the appearance and shape of the model negatively by creating hard edges on the surface. Once you are satisfied with the results press Apply , under the dropdown-menu arrow to the right of Decimate , or by pressing Ctrl-A , while focused on the Decimate modifier, to make the changes permanent. Again, this can take a few seconds. Now that the fishskin triangles have been reduced, select it and press H to hide it or click the icon in the Outliner . This simultaneously hides the fishskin and reveal the fishbones. Preform the same steps the fishbones and try to reduce the triangle count significantly without affecting the appearance of the model. Now unhide the fishskin again for the next assignment by clicking the icon.","title":"Decimate - Reducing the triangles"},{"location":"modules/basics/simple_mesh_editing/sme_assignment/#smooth-ironing-the-creases","text":"The geometry of the fishskin and the fishbones both look a bit rough because of the iso-surface extraction algorithm. If that is not desired, the rough edges can be smoothed out with the Smooth Modifier . Select the fishskin model by clicking on the fishskin with LMB . Go to the Modifiers tab in the properties editor. Click Add Modifier and add the Smooth modifier (it's in the Deform column). Keep the Factor at 0.5 but increase the Repeat to 5 . Watch out with using the slider, every change re-triggers the modifier and when you accidentally slide to a high number it will take a while to calculate. Unfortunately you will notices that the Smooth modifier creates tears along the skin model, this conveniently revealed that the underlying mesh triangles are not fully connected and are present in connected patches. These patches stems from the creation of this model where the calculation of the geometry was done in multiple processors and each patch was created by a separate process. This can be fixed in the Edit-mode but that will be covered in the advanced course. The Factor is good as it is, but changing the value shows what kind of drastic effect it has. Once you are satisfied with the smoothness of the fishskin press Apply and try to do the same with the fishbones.","title":"Smooth - Ironing the creases"},{"location":"modules/basics/simple_mesh_editing/sme_assignment/#boolean-slicing-the-geometry","text":"If you wanna both show the inside of the fish with the context of the outside you can use slice through the fishskin model and reveal the insides of the fish by using a Boolean Modifier . Before you add the Boolean Modifier you first need to reveal the fishskin mesh object again by clicking the icon in the Outliner . Select the fishskin mesh object and go to the Modifiers tab in the properties editor to add a Boolean modifier (it's in the Generate column). Now that the Boolean modifier is added we still miss another 3D mesh object to perform the Boolean operation with. You are now gonna prepare the other mesh object. Move the mouse into the 3D view and add a new UV sphere with Shift-A > Mesh > UV Sphere Scale and translate ( S and G keys) the UV sphere so that it overlaps a part of the fish which you want to clip away. The UV sphere is now shown as a solid surface, which is not desirable when you want to use it for clipping because you want to see through it. You can change the representation of an object in the 3D view using the Object properties under Viewport Display : set Display As to Wire . Also when you want to look at the results in Rendered mode you need to make the sphere invisible using the Ray Visibility settings under Visibility : disable all check-boxes (Camera, Diffuse, Glossy, Transmission, Volume Scatter and Shadow) Now that you prepared the mesh object to preform the Boolean operation with, you can continue setting up the Boolean modifier. Select the fishskin mesh object and go to the Modifiers tab in the properties editor to reveal the already added Boolean modifier. Now under Object , select the Sphere mesh object. Before we want to start moving the clipping Sphere around we want to change the Solver to Fast . This is more simpler and better performing solver and in our case, with the underlying broken patched mesh, also a better option since this solver is able to handle this type of geometry. Now if you select the Sphere object and translate and scale it over the fishskin mesh object you can clip away any desired part as the Boolean modifier updates in real time. As you might have noticed, this Boolean modifier does have some problems with this current mesh and placement of the clipping sphere must be precise. This off course is not always the cause but it should be kept in mind when working with the Boolean modifier. Finally you can view your results with Cycles with Rendered shading ( Z > Rendered ) for better lighting and materials. Or you can give the camera a better position and make a nice final render.","title":"Boolean - Slicing the geometry"},{"location":"overview/about/","text":"About \u00b6 We are members of the High-Performance Computing & Visualization (HPCV) group at SURF , and are based in Amsterdam. SURF is a cooperative association of Dutch educational and research institutions in which the members combine their strengths to acquire or develop digital services, and to encourage knowledge sharing through continuous innovation. Within the HPCV group we support users of the Dutch National compute infrastructure with visualization expertise and software development, on topics such as data visualization, remote visualization, 3D modeling and rendering and use of eXtended Reality (XR) for research and education. Part of our jobs is to provide courses on topics related to visualization in HPC. This Blender course was created for the PRACE Training Center and first provided (in-person) in 2018. Paul Melis \u00b6 Paul Melis has an MSc in Computer Science from the University of Twente in The Netherlands and worked on topics in scientific visualization and VR at the University of Groningen and University of Amsterdam before joining SURFsara in 2009. At SURF he is involved in several activities related to visualization, including realizing visualization projects for end-users, teaching courses and providing user support for visualization tasks on our HPC systems. As part of the SURF innovation portfolio he leads a project on the use of extended reality (XR) for research and education. He likes to use Blender for all things 3D, but also works with Unity, ParaView and sometimes develops a bit of code in Python or C++. Casper van Leeuwen \u00b6 Casper has a MSc in Computer Science from Delft University of Technology where he graduated on the topic of medical visualization. He has been at SURFsara since 2014. He mainly works on web-based 2D/3D visualization, including Jupyter Notebooks and loves to work on Blender projects when the goal is make something look aesthetic! Besides that he also knows his way around Unity and Unreal Engine. Ben de Vries \u00b6 Ben de Vries has a PhD in Astrophysics from KU Leuven. He joined SURF in 2019. He focuses on 2D/3D visualization projects using Blender, Unity and general 3D programming.","title":"About"},{"location":"overview/about/#about","text":"We are members of the High-Performance Computing & Visualization (HPCV) group at SURF , and are based in Amsterdam. SURF is a cooperative association of Dutch educational and research institutions in which the members combine their strengths to acquire or develop digital services, and to encourage knowledge sharing through continuous innovation. Within the HPCV group we support users of the Dutch National compute infrastructure with visualization expertise and software development, on topics such as data visualization, remote visualization, 3D modeling and rendering and use of eXtended Reality (XR) for research and education. Part of our jobs is to provide courses on topics related to visualization in HPC. This Blender course was created for the PRACE Training Center and first provided (in-person) in 2018.","title":"About"},{"location":"overview/about/#paul-melis","text":"Paul Melis has an MSc in Computer Science from the University of Twente in The Netherlands and worked on topics in scientific visualization and VR at the University of Groningen and University of Amsterdam before joining SURFsara in 2009. At SURF he is involved in several activities related to visualization, including realizing visualization projects for end-users, teaching courses and providing user support for visualization tasks on our HPC systems. As part of the SURF innovation portfolio he leads a project on the use of extended reality (XR) for research and education. He likes to use Blender for all things 3D, but also works with Unity, ParaView and sometimes develops a bit of code in Python or C++.","title":"Paul Melis"},{"location":"overview/about/#casper-van-leeuwen","text":"Casper has a MSc in Computer Science from Delft University of Technology where he graduated on the topic of medical visualization. He has been at SURFsara since 2014. He mainly works on web-based 2D/3D visualization, including Jupyter Notebooks and loves to work on Blender projects when the goal is make something look aesthetic! Besides that he also knows his way around Unity and Unreal Engine.","title":"Casper van Leeuwen"},{"location":"overview/about/#ben-de-vries","text":"Ben de Vries has a PhD in Astrophysics from KU Leuven. He joined SURF in 2019. He focuses on 2D/3D visualization projects using Blender, Unity and general 3D programming.","title":"Ben de Vries"},{"location":"overview/conventions/","text":"Text conventions \u00b6 The conventions on these pages follow those used in the official Blender documentation as much as possible: Keyboard and mouse actions, menu names, literal text to enter, etc are shown in monospaced bold, e.g. X or Shift-MMB LMB = left mouse button, MMB = middle mouse button, RMB = right mouse button, Wheel = scrolling the mouse wheel Menu actions are shown as View > Cameras > Set Active Object as Camera The keyboard and mouse shortcuts for object selection, editing, view interaction, etc. work mostly the same in all Blender editors. So G to grab, X to delete, LMB to select, Shift-MMB to translate, Wheel to zoom, etc. You can hover with the mouse over pretty much any UI element to get a tooltip with a short description","title":"Text conventions"},{"location":"overview/conventions/#text-conventions","text":"The conventions on these pages follow those used in the official Blender documentation as much as possible: Keyboard and mouse actions, menu names, literal text to enter, etc are shown in monospaced bold, e.g. X or Shift-MMB LMB = left mouse button, MMB = middle mouse button, RMB = right mouse button, Wheel = scrolling the mouse wheel Menu actions are shown as View > Cameras > Set Active Object as Camera The keyboard and mouse shortcuts for object selection, editing, view interaction, etc. work mostly the same in all Blender editors. So G to grab, X to delete, LMB to select, Shift-MMB to translate, Wheel to zoom, etc. You can hover with the mouse over pretty much any UI element to get a tooltip with a short description","title":"Text conventions"},{"location":"overview/introduction.basics/","text":"Introduction \u00b6 Welcome to the course Introduction to Scientific Visualization with Blender ! This is the online version of the regular in-person course provided by SURF through the PRACE Training Center . We have been providing this course since 2018, usually twice a year, and always enjoy teaching it in-person. Due to COVID-19 we have decided to turn this course into a fully online version, based on positive experiences with the first advanced Blender course we provided online in 2020. So while we know what to expect for certain aspects, others are a bit more experimental, including the course setup . We will ask for feedback on this in the online sessions, but if you have remarks then please let us know. Course level & context \u00b6 This is our introductory Blender course, where we assume no prior knowledge of Blender. We will introduce Blender from the ground up, starting with the user interface and basic functionality. We cover the 3D scene, cameras, lights and materials and some basic mesh editing and animation. It helps to have some familiarity with basic 3D graphics concepts, such as 3D geometry, transformations and rendering. But if not, you will probably pick it up quite quickly during the course. This course is aimed at scientists and researchers of all levels. We don't make many assumptions on use cases for Blender, but do assume the context to be an academic setting. So we won't go into creating visual effects for putting a massive CGI tornado in your backyard that scoops up your neighbours. But if you happen to write a tornado simulation for your research we will be more than happy to see how we can use Blender to make attractive visuals of the data. This doesn't mean that we only assume to apply Blender to existing scientific data. Sometimes certain concepts are best explained by creating a 3D scene, say to produce a nice looking cover image for your PhD thesis, or to illustrate or visualize a certain concept. From previous editions of the course we know many participants bring their own data and want to apply Blender to it. We encourage you to do that as well, as it will also help in providing some focus to your use of Blender. Our advanced Blender course provides more in-depth coverage of some of the topics in this course. See this page on the PRACE Training portal for tentative information on the topics. Blender version \u00b6 We currently use Blender 2.92 for this course and the materials provided. Blender as a software package is a fast moving target, usually with lots of shiny new features and bug fixes in each release. This is great, of course, but with each release usually also a lot of small tweaks and improvements are made, especially in the user interface and workflow. When the next LTS (Long-Term Support) release comes out we will update the course material where needed to provide a longer period of correct materials, as the LTS version of Blender should remain unchanged regarding UI and features for roughly 2 years. Warning Specifically for Linux users that use their Linux distribution's package of Blender: Sometimes the distro package gets built with slightly different versions of software libraries, compared to the official Blender distribution. This is known to sometimes cause different behaviour or even bugs, for example in the handling of video files by the FFmpeg library . In case you find strange issues or bugs with your distro's Blender you might want to try downloading the official Blender binaries to see if that fixes those issues. Issues with course materials \u00b6 We try to keep this course up to date to match the specific version mentioned above. But we might have missed small things. If so, please let us know through Github by reporting an issue. If you don't have a Github account, or would rather not create one, then telling us through Discord is fine as well. Prerequisites \u00b6 You will need: A system (PC or laptop) to work on. This can be a Linux, macOS or Windows system. Blender 2.92 installed on the above system. You can download it from here , or you can use your system package manager to install it. Warning It is not recommended to use a different Blender version for this course, due to possible mismatches in the user interface and functionality with the course material. Please test the Blender installation before the course starts using the instructions sent by e-mail. This will tell you if Blender is working correctly and can save you (and us) time fixing any system-related issues during the course period. Recommended: Using a 3-button mouse is preferred, as not all Blender functionality is easily used through a laptop trackpad","title":"Introduction"},{"location":"overview/introduction.basics/#introduction","text":"Welcome to the course Introduction to Scientific Visualization with Blender ! This is the online version of the regular in-person course provided by SURF through the PRACE Training Center . We have been providing this course since 2018, usually twice a year, and always enjoy teaching it in-person. Due to COVID-19 we have decided to turn this course into a fully online version, based on positive experiences with the first advanced Blender course we provided online in 2020. So while we know what to expect for certain aspects, others are a bit more experimental, including the course setup . We will ask for feedback on this in the online sessions, but if you have remarks then please let us know.","title":"Introduction"},{"location":"overview/introduction.basics/#course-level-context","text":"This is our introductory Blender course, where we assume no prior knowledge of Blender. We will introduce Blender from the ground up, starting with the user interface and basic functionality. We cover the 3D scene, cameras, lights and materials and some basic mesh editing and animation. It helps to have some familiarity with basic 3D graphics concepts, such as 3D geometry, transformations and rendering. But if not, you will probably pick it up quite quickly during the course. This course is aimed at scientists and researchers of all levels. We don't make many assumptions on use cases for Blender, but do assume the context to be an academic setting. So we won't go into creating visual effects for putting a massive CGI tornado in your backyard that scoops up your neighbours. But if you happen to write a tornado simulation for your research we will be more than happy to see how we can use Blender to make attractive visuals of the data. This doesn't mean that we only assume to apply Blender to existing scientific data. Sometimes certain concepts are best explained by creating a 3D scene, say to produce a nice looking cover image for your PhD thesis, or to illustrate or visualize a certain concept. From previous editions of the course we know many participants bring their own data and want to apply Blender to it. We encourage you to do that as well, as it will also help in providing some focus to your use of Blender. Our advanced Blender course provides more in-depth coverage of some of the topics in this course. See this page on the PRACE Training portal for tentative information on the topics.","title":"Course level &amp; context"},{"location":"overview/introduction.basics/#blender-version","text":"We currently use Blender 2.92 for this course and the materials provided. Blender as a software package is a fast moving target, usually with lots of shiny new features and bug fixes in each release. This is great, of course, but with each release usually also a lot of small tweaks and improvements are made, especially in the user interface and workflow. When the next LTS (Long-Term Support) release comes out we will update the course material where needed to provide a longer period of correct materials, as the LTS version of Blender should remain unchanged regarding UI and features for roughly 2 years. Warning Specifically for Linux users that use their Linux distribution's package of Blender: Sometimes the distro package gets built with slightly different versions of software libraries, compared to the official Blender distribution. This is known to sometimes cause different behaviour or even bugs, for example in the handling of video files by the FFmpeg library . In case you find strange issues or bugs with your distro's Blender you might want to try downloading the official Blender binaries to see if that fixes those issues.","title":"Blender version"},{"location":"overview/introduction.basics/#issues-with-course-materials","text":"We try to keep this course up to date to match the specific version mentioned above. But we might have missed small things. If so, please let us know through Github by reporting an issue. If you don't have a Github account, or would rather not create one, then telling us through Discord is fine as well.","title":"Issues with course materials"},{"location":"overview/introduction.basics/#prerequisites","text":"You will need: A system (PC or laptop) to work on. This can be a Linux, macOS or Windows system. Blender 2.92 installed on the above system. You can download it from here , or you can use your system package manager to install it. Warning It is not recommended to use a different Blender version for this course, due to possible mismatches in the user interface and functionality with the course material. Please test the Blender installation before the course starts using the instructions sent by e-mail. This will tell you if Blender is working correctly and can save you (and us) time fixing any system-related issues during the course period. Recommended: Using a 3-button mouse is preferred, as not all Blender functionality is easily used through a laptop trackpad","title":"Prerequisites"},{"location":"overview/schedule.basics/","text":"Schedule \u00b6 Currently no basics course is scheduled Date When What Where Purpose","title":"Schedule"},{"location":"overview/schedule.basics/#schedule","text":"Currently no basics course is scheduled Date When What Where Purpose","title":"Schedule"},{"location":"overview/setup.basics/","text":"Course setup \u00b6 We use a combination of different media within the course, but the basis is for you to follow the training in your own pace over a period of two weeks. The online material consists of: Videos that introduce new concepts and features within Blender. Slides (also presented as part of the videos) for explanations. These are basically the presentations we would normally do plenary. Exercises for you to explore new topics and to train your skills We have scheduled a few short plenary online sessions in the course period to provide general feedback and/or guidance. Support \u00b6 Detailed interaction and support during the course period is provided through our Discord server. Here you can ask questions by chat, upload an image or (if needed) start a video session or share your screen with one of us . In the section 2021 Intr. to Blender Course there are two channels available: #chat-support : this is a (shared) text channel for interacting via chat #plenary-sessions : this is a voice/video channel in which we host the online sessions For one-on-one contact, including the option for screen sharing, right-click on one of our names as shown above. We will be active on Discord during office hours (CET time zone) and will try to also be on-line outside of those hours, all on a best-effort basis. Data files \u00b6 Most of the exercises require you to load a Blender scene file that we provide. These files can be found at https://edu.nl/8n7en . It is best to download the full content of the share to your local system using the Download button in the upper-right. This share contains: data - Blender files (and other data) for the assignments, with a subdirectory per chapter slides - The slides (in PDF) walkthroughs - Some of the files used in the presentations cheat-sheat-2.9.pdf - A 2-page cheat sheet with often used operations and their short cuts Time investment \u00b6 As noted this is the first edition of this course in its online format. As such we don't have good estimates yet on the amount of time you need to to work your way through the course. Of course, this also depends on how much attention you devote to each part, available time, your learning pace, etc. However, the in-person course setup we used in the previous years was a full-day course. The time spent on the different subjects and their assignments in that setup is shown below. This might give you some idea on the relative depth of the topics. Topic Time in schedule (previous in-person course) Videos (this course) Introduction 30 minutes 5 minutes Blender basics 120 minutes 45 minutes Importing data 30 minutes 30 minutes Rendering, lighting & materials 105 minutes 65 minutes Simple mesh editing 30 minutes 20 minutes Basic animation 45 minutes 35 minutes Note that in the conversion to the online format certain video lectures might have become longer, some shorter, etc.","title":"Course setup"},{"location":"overview/setup.basics/#course-setup","text":"We use a combination of different media within the course, but the basis is for you to follow the training in your own pace over a period of two weeks. The online material consists of: Videos that introduce new concepts and features within Blender. Slides (also presented as part of the videos) for explanations. These are basically the presentations we would normally do plenary. Exercises for you to explore new topics and to train your skills We have scheduled a few short plenary online sessions in the course period to provide general feedback and/or guidance.","title":"Course setup"},{"location":"overview/setup.basics/#support","text":"Detailed interaction and support during the course period is provided through our Discord server. Here you can ask questions by chat, upload an image or (if needed) start a video session or share your screen with one of us . In the section 2021 Intr. to Blender Course there are two channels available: #chat-support : this is a (shared) text channel for interacting via chat #plenary-sessions : this is a voice/video channel in which we host the online sessions For one-on-one contact, including the option for screen sharing, right-click on one of our names as shown above. We will be active on Discord during office hours (CET time zone) and will try to also be on-line outside of those hours, all on a best-effort basis.","title":"Support"},{"location":"overview/setup.basics/#data-files","text":"Most of the exercises require you to load a Blender scene file that we provide. These files can be found at https://edu.nl/8n7en . It is best to download the full content of the share to your local system using the Download button in the upper-right. This share contains: data - Blender files (and other data) for the assignments, with a subdirectory per chapter slides - The slides (in PDF) walkthroughs - Some of the files used in the presentations cheat-sheat-2.9.pdf - A 2-page cheat sheet with often used operations and their short cuts","title":"Data files"},{"location":"overview/setup.basics/#time-investment","text":"As noted this is the first edition of this course in its online format. As such we don't have good estimates yet on the amount of time you need to to work your way through the course. Of course, this also depends on how much attention you devote to each part, available time, your learning pace, etc. However, the in-person course setup we used in the previous years was a full-day course. The time spent on the different subjects and their assignments in that setup is shown below. This might give you some idea on the relative depth of the topics. Topic Time in schedule (previous in-person course) Videos (this course) Introduction 30 minutes 5 minutes Blender basics 120 minutes 45 minutes Importing data 30 minutes 30 minutes Rendering, lighting & materials 105 minutes 65 minutes Simple mesh editing 30 minutes 20 minutes Basic animation 45 minutes 35 minutes Note that in the conversion to the online format certain video lectures might have become longer, some shorter, etc.","title":"Time investment"},{"location":"references/cheat_sheet/","text":"Cheat sheet \u00b6 With this course we provide a 2-page cheat sheet that lists basic and often-used operations and their shortcut keys. It also includes a summarize of major interface elements. The cheat sheet can be found here as a double-sided PDF, which can easily be printed.","title":"Cheat sheet"},{"location":"references/cheat_sheet/#cheat-sheet","text":"With this course we provide a 2-page cheat sheet that lists basic and often-used operations and their shortcut keys. It also includes a summarize of major interface elements. The cheat sheet can be found here as a double-sided PDF, which can easily be printed.","title":"Cheat sheet"},{"location":"references/community/","text":"Community resources \u00b6 On blenderartists.org lots of Blender users and artists are hanging out. There you can ask questions or feedback, show off your work or check out the vast amount of knowledge, tips and Blender renderings in the forums. BlenderNation gathers information on different topics and includes video tutorials, blog posts on art created with Blender and a lot more. The Blender subreddit contains many different posts, ranging from simple questions to artists show off their amazing work. Well-known artists and gurus working with Blender are: Andrew Price ( twitter ) aka \"Blender Guru\" provides many cool tutorials on https://www.blenderguru.com/ and his YouTube channel . Glex Alexandrov ( twitter and twitter ) aka \"Creative shrimp\" has some very creative and inspirational tutorials on his YouTube channel . Ian Hubert ( YouTube and twitter ), famous for his Lazy tutorials (very efficient 1 minute tutorials), has videos on advanced green screen techniques and VFX in Blender. Simon Thommes ( twitter and YouTube ) is a materials wizard, he is able to create complex geometry out of one cube or sphere with just the Shader editor. Steve Lund has some great Blender tutorials on his YouTube channel . Zach Reinhardt has some great modeling, texturing and VFX tutorials on his YouTube channel Peter France was the Blender artist at the Corridor Crew which just started his own YouTube channel with some instructive tutorials. YanSculpts does not fit this course material perse but it goes to show how versatile Blender can be, this artist creates some amazing sculptures in Blender of which he shows the process on his YouTube channel . Jan van den Hemel shares many tips and tricks through Twitter, both on Blender usage as well as making a scene look a certain way","title":"Community resources"},{"location":"references/community/#community-resources","text":"On blenderartists.org lots of Blender users and artists are hanging out. There you can ask questions or feedback, show off your work or check out the vast amount of knowledge, tips and Blender renderings in the forums. BlenderNation gathers information on different topics and includes video tutorials, blog posts on art created with Blender and a lot more. The Blender subreddit contains many different posts, ranging from simple questions to artists show off their amazing work. Well-known artists and gurus working with Blender are: Andrew Price ( twitter ) aka \"Blender Guru\" provides many cool tutorials on https://www.blenderguru.com/ and his YouTube channel . Glex Alexandrov ( twitter and twitter ) aka \"Creative shrimp\" has some very creative and inspirational tutorials on his YouTube channel . Ian Hubert ( YouTube and twitter ), famous for his Lazy tutorials (very efficient 1 minute tutorials), has videos on advanced green screen techniques and VFX in Blender. Simon Thommes ( twitter and YouTube ) is a materials wizard, he is able to create complex geometry out of one cube or sphere with just the Shader editor. Steve Lund has some great Blender tutorials on his YouTube channel . Zach Reinhardt has some great modeling, texturing and VFX tutorials on his YouTube channel Peter France was the Blender artist at the Corridor Crew which just started his own YouTube channel with some instructive tutorials. YanSculpts does not fit this course material perse but it goes to show how versatile Blender can be, this artist creates some amazing sculptures in Blender of which he shows the process on his YouTube channel . Jan van den Hemel shares many tips and tricks through Twitter, both on Blender usage as well as making a scene look a certain way","title":"Community resources"},{"location":"references/interface/","text":"User Interface elements \u00b6 * By default the status bar at the bottom only shows the Blender version number. You can add extra statistics, such as the number of 3D objects in the scene and memory usage in the preferences. Use the application menu Edit > Preferences , select the Interface tab, in the Editors > Status Bar section and check all marks ( Scene Statistics , System Memory , Video Memory ). Editor type menu \u00b6 The yellow highlight indicates often used ones for this course","title":"User Interface elements"},{"location":"references/interface/#user-interface-elements","text":"* By default the status bar at the bottom only shows the Blender version number. You can add extra statistics, such as the number of 3D objects in the scene and memory usage in the preferences. Use the application menu Edit > Preferences , select the Interface tab, in the Editors > Status Bar section and check all marks ( Scene Statistics , System Memory , Video Memory ).","title":"User Interface elements"},{"location":"references/interface/#editor-type-menu","text":"The yellow highlight indicates often used ones for this course","title":"Editor type menu"},{"location":"references/official/","text":"Official sources \u00b6 The official home for Blender is blender.org The official Blender Reference Manual can be found here Official demo files showing off lots of cool features and scenes can be found here If you are interested in following recent development of new features in Blender then the Blender Today Live channel on YouTube is a good resource. On Twitter you can follow @Blender for official Blender news or @BlenderDev for more in-depth development information. The hashtag to use for Blender is #b3d .","title":"Official sources"},{"location":"references/official/#official-sources","text":"The official home for Blender is blender.org The official Blender Reference Manual can be found here Official demo files showing off lots of cool features and scenes can be found here If you are interested in following recent development of new features in Blender then the Blender Today Live channel on YouTube is a good resource. On Twitter you can follow @Blender for official Blender news or @BlenderDev for more in-depth development information. The hashtag to use for Blender is #b3d .","title":"Official sources"},{"location":"references/scene/","text":"Scene resources (3D models, materials, textures) \u00b6 Here we list a number of online resources for 3D models, textures, shaders, etc. In general certain 3D models might be free for download, while others might only be available paid (usually for a small amount). Usually, the nicer the 3D model the higher the cost. Also, different licenses are used for the models and these will describe how you can use the models and any attribution you might need to give when using it. 3D Models \u00b6 Turbosquid is one of the oldest 3D model websites and provides models in all sort of topics, some free, some paid. Sketchfab hosts a large collection of 3D models from many different categories. Many 3D models are textured and some are even animated. 3D Model Haven distributes freely usable 3D models, many of them textured. It is not as extensive as other websites, but the upside is that all models can be freely used. CGTrader also hosts many 3D models, some of them free, some paid There's a section on BlenderNation where Blender models are shared. Again, some of these might be free, others will involve some payment. BlenderMarket contains a section with 3D models Textures and images \u00b6 Texture Haven provides textures to be used in materials and shaders. All textures available are free. CC0 Textures has many high-quality textures BlenderMarket has a section with shaders, materials and textures . HDRI Haven is similar to Texture Haven, but contains many freely available HDRI 360 images that can be used for realistic environment lighting in Blender BlenderKit \u00b6 BlenderKit is an online repository of materials, 3D models and a few other things. The nice thing is that it is integrated within Blender through an add-on that is included (but not activated) by default. Detailed instructions on activating and using the add-on can be found in this chapter of the Blender manual. When the add-on is enabled it provides some extra elements in the Blender interface for searching, say a material or 3D model, by name, which can then be easily used in a Blender scene: Note that many of the assets in BlenderKit are free, but some are only available by buying a subscription. The add-on has quite a few options and performs certain operations that you would otherwise do manually or maybe not use at all. As such, it can set up the scene in more exotic ways, for example by linking to another Blender file. Also, the materials provided by BlenderKit can use pretty complex shader graphs, involving multiple layers of textures, or advanced node setups. Warning When applying a BlenderKit material on your own object the rendering might not look like the material preview in all cases. Especially use of displaced materials involves specific settings for the Cycles renderer and use of subdivision on the object. Warning Textures from BlenderKit are by default stored in a separate directory on your system ( ~/blenderkit_data on Linux). There is an option to pack the textures within the Blender file, making it larger in size but also completely independent of any external files, which is useful if you want to transfer the Blender file to a different system. The option for packing files is File > External Data > Pack All into .blend .","title":"Scene resources (3D models, materials, textures)"},{"location":"references/scene/#scene-resources-3d-models-materials-textures","text":"Here we list a number of online resources for 3D models, textures, shaders, etc. In general certain 3D models might be free for download, while others might only be available paid (usually for a small amount). Usually, the nicer the 3D model the higher the cost. Also, different licenses are used for the models and these will describe how you can use the models and any attribution you might need to give when using it.","title":"Scene resources (3D models, materials, textures)"},{"location":"references/scene/#3d-models","text":"Turbosquid is one of the oldest 3D model websites and provides models in all sort of topics, some free, some paid. Sketchfab hosts a large collection of 3D models from many different categories. Many 3D models are textured and some are even animated. 3D Model Haven distributes freely usable 3D models, many of them textured. It is not as extensive as other websites, but the upside is that all models can be freely used. CGTrader also hosts many 3D models, some of them free, some paid There's a section on BlenderNation where Blender models are shared. Again, some of these might be free, others will involve some payment. BlenderMarket contains a section with 3D models","title":"3D Models"},{"location":"references/scene/#textures-and-images","text":"Texture Haven provides textures to be used in materials and shaders. All textures available are free. CC0 Textures has many high-quality textures BlenderMarket has a section with shaders, materials and textures . HDRI Haven is similar to Texture Haven, but contains many freely available HDRI 360 images that can be used for realistic environment lighting in Blender","title":"Textures and images"},{"location":"references/scene/#blenderkit","text":"BlenderKit is an online repository of materials, 3D models and a few other things. The nice thing is that it is integrated within Blender through an add-on that is included (but not activated) by default. Detailed instructions on activating and using the add-on can be found in this chapter of the Blender manual. When the add-on is enabled it provides some extra elements in the Blender interface for searching, say a material or 3D model, by name, which can then be easily used in a Blender scene: Note that many of the assets in BlenderKit are free, but some are only available by buying a subscription. The add-on has quite a few options and performs certain operations that you would otherwise do manually or maybe not use at all. As such, it can set up the scene in more exotic ways, for example by linking to another Blender file. Also, the materials provided by BlenderKit can use pretty complex shader graphs, involving multiple layers of textures, or advanced node setups. Warning When applying a BlenderKit material on your own object the rendering might not look like the material preview in all cases. Especially use of displaced materials involves specific settings for the Cycles renderer and use of subdivision on the object. Warning Textures from BlenderKit are by default stored in a separate directory on your system ( ~/blenderkit_data on Linux). There is an option to pack the textures within the Blender file, making it larger in size but also completely independent of any external files, which is useful if you want to transfer the Blender file to a different system. The option for packing files is File > External Data > Pack All into .blend .","title":"BlenderKit"}]}